{
	"id": "15237a97c7ac143f0230b40418e5222d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"openzp.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\n\r\nimport \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\";\r\n\r\n\r\ncontract MyToken is ERC20, ERC20Burnable, Ownable {\r\n    constructor(address initialOwner)\r\n        ERC20(\"MyToken\", \"MTK\")\r\n        Ownable()\r\n    {}\r\n\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@4.0.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 currentAllowance = allowance(account, _msgSender());\n        require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\");\n        _approve(account, _msgSender(), currentAllowance - amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"@openzeppelin/contracts@4.0.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.0.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts@4.0.0/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.0.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1909:1914  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1917:1922  name_ */\n  dup4\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1909:1914  _name */\n  dup3\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1942:1949  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_24:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_25:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_29:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_30:\n    /* \"#utility.yul\":1313:1374   */\n  tag_31\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_33\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_12:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_35:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_14:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_40:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_41:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_39:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_7:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2971:3068   */\n  tag_48\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_49\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_50)\n    /* \"#utility.yul\":3192:3855   */\ntag_51:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_55:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_58:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3169:3181  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3013:3015  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3320:3327  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3893:3900  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3930  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3946  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2066:2079  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2098:2103  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2091:2103  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4174:4178  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4213:4220  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4222:4228  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4190:4198  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4246:4250  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4830:4834  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4856:4862  sender */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4864:4873  recipient */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4875:4881  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4846:4855  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4893:4917  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4931  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4953  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4971:4997  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x28\n        /* \"#utility.yul\":2962:2980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3103   */\n      mstore\n        /* \"#utility.yul\":3120:3139   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5061:5067  sender */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_85\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5102:5108  amount */\n      dup7\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5083:5099  currentAllowance */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5052:5060  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5127:5131  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5621:5625  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5680  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5703  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5621:5625  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5637:5717  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5660:5667  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_85\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5706:5716  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_93\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2270:2283  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2302:2309  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2295:2309  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6325:6329  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6379  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6402  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6420:6455  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3747:3749   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3729:3750   */\n      mstore\n        /* \"#utility.yul\":3786:3788   */\n      0x25\n        /* \"#utility.yul\":3766:3784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3759:3789   */\n      mstore\n        /* \"#utility.yul\":3825:3859   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3805:3823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3798:3860   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3876:3894   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3869:3904   */\n      mstore\n        /* \"#utility.yul\":3921:3940   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3545:3946   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_103:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_106\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6530:6537  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_85\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6558:6573  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6539:6555  currentAllowance */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_106:\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6592:6596  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3660:3664  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3700:3709  recipient */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3711:3717  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3676:3685  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9597:9616  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4135:4156   */\n      mstore\n        /* \"#utility.yul\":4192:4194   */\n      0x24\n        /* \"#utility.yul\":4172:4190   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4165:4195   */\n      mstore\n        /* \"#utility.yul\":4231:4265   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4211:4229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4204:4266   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4282:4300   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4275:4309   */\n      mstore\n        /* \"#utility.yul\":4326:4345   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3951:4351   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9675:9696  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4558:4560   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4540:4561   */\n      mstore\n        /* \"#utility.yul\":4597:4599   */\n      0x22\n        /* \"#utility.yul\":4577:4595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4570:4600   */\n      mstore\n        /* \"#utility.yul\":4636:4670   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4616:4634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4609:4671   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4687:4705   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4680:4712   */\n      mstore\n        /* \"#utility.yul\":4729:4748   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4356:4754   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9757  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9773  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9782  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7182:7202  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4943:4964   */\n      mstore\n        /* \"#utility.yul\":5000:5002   */\n      0x25\n        /* \"#utility.yul\":4980:4998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4973:5003   */\n      mstore\n        /* \"#utility.yul\":5039:5073   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5019:5037   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5012:5074   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5090:5108   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5083:5118   */\n      mstore\n        /* \"#utility.yul\":5135:5154   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4759:5160   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7262:7285  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5349:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5408   */\n      0x23\n        /* \"#utility.yul\":5386:5404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5379:5409   */\n      mstore\n        /* \"#utility.yul\":5445:5479   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5425:5443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5418:5480   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5496:5514   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5489:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":5165:5564   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7394:7415  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7453:7476  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5753:5774   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x26\n        /* \"#utility.yul\":5790:5808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5783:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5883   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5829:5847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5822:5884   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5900:5918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5893:5929   */\n      mstore\n        /* \"#utility.yul\":5946:5965   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5569:5971   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_134\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7565:7571  amount */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7549:7562  senderBalance */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_86\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7571  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7601  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_93\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7644:7653  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7636:7642  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7655:7661  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7164:7669  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_142:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_142)\n    tag_144:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_138:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_146:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_148:\n        /* \"#utility.yul\":913:942   */\n      tag_149\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_138\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_153:\n        /* \"#utility.yul\":1563:1592   */\n      tag_154\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_155\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_158:\n        /* \"#utility.yul\":2051:2080   */\n      tag_159\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_138\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_161:\n        /* \"#utility.yul\":2259:2288   */\n      tag_162\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_138\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_163\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_138\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_165:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3277   */\n    tag_139:\n        /* \"#utility.yul\":3211:3221   */\n      0x4e487b71\n        /* \"#utility.yul\":3206:3209   */\n      0xe0\n        /* \"#utility.yul\":3202:3222   */\n      shl\n        /* \"#utility.yul\":3199:3200   */\n      0x00\n        /* \"#utility.yul\":3192:3223   */\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x11\n        /* \"#utility.yul\":3239:3240   */\n      0x04\n        /* \"#utility.yul\":3232:3247   */\n      mstore\n        /* \"#utility.yul\":3266:3270   */\n      0x24\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3256:3271   */\n      revert\n        /* \"#utility.yul\":3282:3410   */\n    tag_86:\n        /* \"#utility.yul\":3349:3358   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3370:3381   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3367:3404   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3384:3402   */\n      tag_70\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":3415:3540   */\n    tag_93:\n        /* \"#utility.yul\":3480:3489   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3501:3511   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3498:3534   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3514:3532   */\n      tag_70\n      tag_139\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220802e6cd04bfd1df2c08cce3ea80c7d5f3a87588eee8d4537dfdac9c069a98b3064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_151": {
									"entryPoint": null,
									"id": 151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4114:6",
										"nodeType": "YulBlock",
										"src": "0:4114:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:780:6",
													"nodeType": "YulBlock",
													"src": "210:780:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nativeSrc": "294:13:6",
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:6",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:6",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:6",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nativeSrc": "330:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:6",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nativeSrc": "326:18:6",
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:6",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:6",
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nativeSrc": "369:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nativeSrc": "369:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nativeSrc": "356:10:6",
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nativeSrc": "353:36:6",
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nativeSrc": "398:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:6",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nativeSrc": "408:7:6",
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:6",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nativeSrc": "438:9:6",
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:6",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:6",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:6",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:6",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nativeSrc": "498:13:6",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:6",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nativeSrc": "494:22:6",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:6",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nativeSrc": "490:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nativeSrc": "486:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nativeSrc": "474:53:6",
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:6",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:6",
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nativeSrc": "588:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nativeSrc": "588:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nativeSrc": "542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nativeSrc": "562:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nativeSrc": "539:46:6",
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nativeSrc": "536:72:6",
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nativeSrc": "617:22:6",
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nativeSrc": "617:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nativeSrc": "648:18:6",
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nativeSrc": "648:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"nativeSrc": "675:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:6",
																"nodeType": "YulLiteral",
																"src": "685:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:6",
																	"nodeType": "YulTypedName",
																	"src": "679:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:6",
																"nodeType": "YulBlock",
																"src": "737:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:6",
																					"nodeType": "YulLiteral",
																					"src": "746:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:6",
																					"nodeType": "YulLiteral",
																					"src": "749:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:6"
																			},
																			"nativeSrc": "739:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:6"
																		},
																		"nativeSrc": "739:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:6"
																				},
																				"nativeSrc": "708:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:6",
																				"nodeType": "YulLiteral",
																				"src": "725:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:6"
																		},
																		"nativeSrc": "704:26:6",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:6"
																},
																"nativeSrc": "701:35:6",
																"nodeType": "YulFunctionCall",
																"src": "701:35:6"
															},
															"nativeSrc": "698:55:6",
															"nodeType": "YulIf",
															"src": "698:55:6"
														},
														{
															"nativeSrc": "762:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:6",
																"nodeType": "YulLiteral",
																"src": "771:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:6",
																	"nodeType": "YulTypedName",
																	"src": "766:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:6",
																"nodeType": "YulBlock",
																"src": "827:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:6"
																							},
																							"nativeSrc": "852:14:6",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:6"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:6",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:6"
																					},
																					"nativeSrc": "848:23:6",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:6"
																									},
																									"nativeSrc": "883:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:6"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:6"
																							},
																							"nativeSrc": "879:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:6"
																					},
																					"nativeSrc": "873:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:6"
																			},
																			"nativeSrc": "841:63:6",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:6"
																		},
																		"nativeSrc": "841:63:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:6"
																},
																"nativeSrc": "789:9:6",
																"nodeType": "YulFunctionCall",
																"src": "789:9:6"
															},
															"nativeSrc": "781:133:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:6",
																"nodeType": "YulBlock",
																"src": "799:19:6",
																"statements": [
																	{
																		"nativeSrc": "801:15:6",
																		"nodeType": "YulAssignment",
																		"src": "801:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:6"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:6"
																			},
																			"nativeSrc": "806:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:6",
																"nodeType": "YulBlock",
																"src": "785:3:6",
																"statements": []
															},
															"src": "781:133:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:6"
																				},
																				"nativeSrc": "934:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:6",
																				"nodeType": "YulLiteral",
																				"src": "951:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:6"
																		},
																		"nativeSrc": "930:26:6",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "958:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:6"
																},
																"nativeSrc": "923:37:6",
																"nodeType": "YulFunctionCall",
																"src": "923:37:6"
															},
															"nativeSrc": "923:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:6"
														},
														{
															"nativeSrc": "969:15:6",
															"nodeType": "YulAssignment",
															"src": "969:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:6",
																"nodeType": "YulIdentifier",
																"src": "978:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:844:6"
											},
											{
												"body": {
													"nativeSrc": "1113:444:6",
													"nodeType": "YulBlock",
													"src": "1113:444:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:6",
																"nodeType": "YulBlock",
																"src": "1159:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:6"
																			},
																			"nativeSrc": "1161:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:6"
																		},
																		"nativeSrc": "1161:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:6"
																		},
																		"nativeSrc": "1130:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:6"
																},
																"nativeSrc": "1126:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:6"
															},
															"nativeSrc": "1123:52:6",
															"nodeType": "YulIf",
															"src": "1123:52:6"
														},
														{
															"nativeSrc": "1184:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:6"
																},
																"nativeSrc": "1198:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:6"
																		},
																		"nativeSrc": "1237:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:6"
																},
																"nativeSrc": "1233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:6",
																"nodeType": "YulBlock",
																"src": "1278:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:6"
																			},
																			"nativeSrc": "1280:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:6"
																		},
																		"nativeSrc": "1280:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:6"
																},
																"nativeSrc": "1263:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:6"
															},
															"nativeSrc": "1260:34:6",
															"nodeType": "YulIf",
															"src": "1260:34:6"
														},
														{
															"nativeSrc": "1303:71:6",
															"nodeType": "YulAssignment",
															"src": "1303:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:6"
																		},
																		"nativeSrc": "1342:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:6"
																},
																"nativeSrc": "1313:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:6"
																}
															]
														},
														{
															"nativeSrc": "1383:41:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:6"
																		},
																		"nativeSrc": "1405:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:6"
																},
																"nativeSrc": "1399:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:6",
																"nodeType": "YulBlock",
																"src": "1453:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:6"
																			},
																			"nativeSrc": "1455:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:6"
																		},
																		"nativeSrc": "1455:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:6"
																},
																"nativeSrc": "1436:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:6"
															},
															"nativeSrc": "1433:36:6",
															"nodeType": "YulIf",
															"src": "1433:36:6"
														},
														{
															"nativeSrc": "1478:73:6",
															"nodeType": "YulAssignment",
															"src": "1478:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:6"
																		},
																		"nativeSrc": "1517:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:6"
																},
																"nativeSrc": "1488:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:6",
														"nodeType": "YulTypedName",
														"src": "1071:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:6",
														"nodeType": "YulTypedName",
														"src": "1082:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:6",
														"nodeType": "YulTypedName",
														"src": "1094:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:6",
														"nodeType": "YulTypedName",
														"src": "1102:6:6",
														"type": ""
													}
												],
												"src": "995:562:6"
											},
											{
												"body": {
													"nativeSrc": "1617:325:6",
													"nodeType": "YulBlock",
													"src": "1617:325:6",
													"statements": [
														{
															"nativeSrc": "1627:22:6",
															"nodeType": "YulAssignment",
															"src": "1627:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:6"
																},
																"nativeSrc": "1637:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:6"
																}
															]
														},
														{
															"nativeSrc": "1658:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:6"
																},
																"nativeSrc": "1684:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:6",
																"nodeType": "YulBlock",
																"src": "1735:31:6",
																"statements": [
																	{
																		"nativeSrc": "1737:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:6"
																			},
																			"nativeSrc": "1747:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:6"
																},
																"nativeSrc": "1708:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:6"
															},
															"nativeSrc": "1705:61:6",
															"nodeType": "YulIf",
															"src": "1705:61:6"
														},
														{
															"body": {
																"nativeSrc": "1825:111:6",
																"nodeType": "YulBlock",
																"src": "1825:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:6"
																					},
																					"nativeSrc": "1849:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			},
																			"nativeSrc": "1839:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:6"
																		},
																		"nativeSrc": "1839:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:6"
																			},
																			"nativeSrc": "1883:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:6"
																		},
																		"nativeSrc": "1883:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:6"
																			},
																			"nativeSrc": "1911:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:6"
																		},
																		"nativeSrc": "1911:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:6"
																		},
																		"nativeSrc": "1801:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:6"
																},
																"nativeSrc": "1778:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:6"
															},
															"nativeSrc": "1775:161:6",
															"nodeType": "YulIf",
															"src": "1775:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:6",
														"nodeType": "YulTypedName",
														"src": "1597:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:6",
														"nodeType": "YulTypedName",
														"src": "1606:6:6",
														"type": ""
													}
												],
												"src": "1562:380:6"
											},
											{
												"body": {
													"nativeSrc": "2003:65:6",
													"nodeType": "YulBlock",
													"src": "2003:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:6"
																},
																"nativeSrc": "2013:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:6"
															},
															"nativeSrc": "2013:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:6"
														},
														{
															"nativeSrc": "2036:26:6",
															"nodeType": "YulAssignment",
															"src": "2036:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:6"
																},
																"nativeSrc": "2044:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:6",
														"nodeType": "YulTypedName",
														"src": "1986:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:6",
														"nodeType": "YulTypedName",
														"src": "1994:4:6",
														"type": ""
													}
												],
												"src": "1947:121:6"
											},
											{
												"body": {
													"nativeSrc": "2154:437:6",
													"nodeType": "YulBlock",
													"src": "2154:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:6",
																"nodeType": "YulBlock",
																"src": "2187:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:6"
																			},
																			"nativeSrc": "2201:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:6"
																		},
																		"nativeSrc": "2201:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:6"
																	},
																	{
																		"nativeSrc": "2230:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:6"
																			},
																			"nativeSrc": "2242:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:6"
																							},
																							"nativeSrc": "2309:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:6"
																					},
																					"nativeSrc": "2302:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:6"
																			},
																			"nativeSrc": "2292:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:6",
																			"nodeType": "YulBlock",
																			"src": "2367:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:6"
																			},
																			"nativeSrc": "2346:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:6"
																		},
																		"nativeSrc": "2343:47:6",
																		"nodeType": "YulIf",
																		"src": "2343:47:6"
																	},
																	{
																		"nativeSrc": "2403:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:6"
																							},
																							"nativeSrc": "2430:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:6"
																					},
																					"nativeSrc": "2423:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:6"
																			},
																			"nativeSrc": "2413:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:6",
																			"nodeType": "YulBlock",
																			"src": "2555:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:6"
																						},
																						"nativeSrc": "2557:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:6"
																					},
																					"nativeSrc": "2557:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:6"
																			},
																			"nativeSrc": "2502:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:6"
																		},
																		"nativeSrc": "2494:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:6",
																			"nodeType": "YulBlock",
																			"src": "2516:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:6"
																						},
																						"nativeSrc": "2527:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:6",
																			"nodeType": "YulBlock",
																			"src": "2498:3:6",
																			"statements": []
																		},
																		"src": "2494:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:6"
																},
																"nativeSrc": "2167:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:6"
															},
															"nativeSrc": "2164:421:6",
															"nodeType": "YulIf",
															"src": "2164:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:6",
														"nodeType": "YulTypedName",
														"src": "2126:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:6",
														"nodeType": "YulTypedName",
														"src": "2133:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:6",
														"nodeType": "YulTypedName",
														"src": "2138:10:6",
														"type": ""
													}
												],
												"src": "2073:518:6"
											},
											{
												"body": {
													"nativeSrc": "2681:81:6",
													"nodeType": "YulBlock",
													"src": "2681:81:6",
													"statements": [
														{
															"nativeSrc": "2691:65:6",
															"nodeType": "YulAssignment",
															"src": "2691:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:6"
																								},
																								"nativeSrc": "2720:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:6"
																								},
																								"nativeSrc": "2733:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:6"
																						},
																						"nativeSrc": "2716:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:6"
																				},
																				"nativeSrc": "2712:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:6"
																		},
																		"nativeSrc": "2702:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:6"
																		},
																		"nativeSrc": "2744:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:6"
																},
																"nativeSrc": "2699:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:6",
														"nodeType": "YulTypedName",
														"src": "2658:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:6",
														"nodeType": "YulTypedName",
														"src": "2664:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:6",
														"nodeType": "YulTypedName",
														"src": "2672:4:6",
														"type": ""
													}
												],
												"src": "2596:166:6"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:6",
													"nodeType": "YulBlock",
													"src": "2863:1249:6",
													"statements": [
														{
															"nativeSrc": "2873:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:6"
																},
																"nativeSrc": "2887:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:6",
																"nodeType": "YulBlock",
																"src": "2940:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:6"
																			},
																			"nativeSrc": "2942:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:6"
																		},
																		"nativeSrc": "2942:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:6"
																				},
																				"nativeSrc": "2924:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:6"
																		},
																		"nativeSrc": "2920:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:6"
																},
																"nativeSrc": "2909:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:6"
															},
															"nativeSrc": "2906:56:6",
															"nodeType": "YulIf",
															"src": "2906:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:6"
																				},
																				"nativeSrc": "3047:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:6"
																		},
																		"nativeSrc": "3021:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:6"
																},
																"nativeSrc": "2971:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:6"
															},
															"nativeSrc": "2971:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:6"
														},
														{
															"nativeSrc": "3077:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:6",
																"nodeType": "YulLiteral",
																"src": "3094:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:6",
																"nodeType": "YulLiteral",
																"src": "3123:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:6",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:6",
															"nodeType": "YulAssignment",
															"src": "3136:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:6",
																"nodeType": "YulLiteral",
																"src": "3149:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:6",
																		"nodeType": "YulBlock",
																		"src": "3199:656:6",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:6"
																							},
																							"nativeSrc": "3240:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:6"
																					},
																					"nativeSrc": "3228:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:6"
																					},
																					"nativeSrc": "3275:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:6",
																					"nodeType": "YulBlock",
																					"src": "3410:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:6"
																												},
																												"nativeSrc": "3449:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:6"
																										},
																										"nativeSrc": "3443:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:6"
																								},
																								"nativeSrc": "3428:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:6"
																							},
																							"nativeSrc": "3428:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:6"
																						},
																						{
																							"nativeSrc": "3487:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:6"
																								},
																								"nativeSrc": "3497:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:6",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:6"
																								},
																								"nativeSrc": "3541:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:6"
																					},
																					"nativeSrc": "3354:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:6"
																				},
																				"nativeSrc": "3346:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:6",
																					"nodeType": "YulBlock",
																					"src": "3369:28:6",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:6"
																								},
																								"nativeSrc": "3376:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:6",
																					"nodeType": "YulBlock",
																					"src": "3350:3:6",
																					"statements": []
																				},
																				"src": "3346:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:6",
																					"nodeType": "YulBlock",
																					"src": "3630:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:6"
																										},
																										"nativeSrc": "3671:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:6"
																								},
																								"nativeSrc": "3665:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:6"
																																		},
																																		"nativeSrc": "3750:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:6"
																																},
																																"nativeSrc": "3746:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:6"
																																},
																																"nativeSrc": "3772:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:6"
																														},
																														"nativeSrc": "3742:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:6"
																												},
																												"nativeSrc": "3738:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:6"
																										},
																										"nativeSrc": "3723:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:6"
																								},
																								"nativeSrc": "3708:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:6"
																							},
																							"nativeSrc": "3708:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:6"
																					},
																					"nativeSrc": "3598:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:6"
																				},
																				"nativeSrc": "3595:201:6",
																				"nodeType": "YulIf",
																				"src": "3595:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:6",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:6"
																									},
																									"nativeSrc": "3826:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:6"
																							},
																							"nativeSrc": "3822:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:6"
																					},
																					"nativeSrc": "3809:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:6"
																				},
																				"nativeSrc": "3809:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:6",
																	"nodeType": "YulCase",
																	"src": "3192:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:6",
																		"nodeType": "YulBlock",
																		"src": "3872:234:6",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:6",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:6",
																					"nodeType": "YulBlock",
																					"src": "3935:67:6",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:6",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:6"
																										},
																										"nativeSrc": "3968:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:6"
																								},
																								"nativeSrc": "3962:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:6"
																				},
																				"nativeSrc": "3913:89:6",
																				"nodeType": "YulIf",
																				"src": "3913:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:6"
																							},
																							"nativeSrc": "4028:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:6"
																					},
																					"nativeSrc": "4015:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:6"
																				},
																				"nativeSrc": "4015:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:6"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:6",
																	"nodeType": "YulCase",
																	"src": "3864:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:6"
																},
																"nativeSrc": "3169:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:6"
															},
															"nativeSrc": "3162:944:6",
															"nodeType": "YulSwitch",
															"src": "3162:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:6",
														"nodeType": "YulTypedName",
														"src": "2848:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:6",
														"nodeType": "YulTypedName",
														"src": "2854:3:6",
														"type": ""
													}
												],
												"src": "2767:1345:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000ba338038062000ba383398101604081905262000033916200011a565b60036200004183826200020a565b5060046200005082826200020a565b505050620002d6565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b8160405283815260209250866020858801011115620000e2575f80fd5b5f91505b83821015620001055785820183015181830184015290820190620000e6565b5f602085830101528094505050505092915050565b5f80604083850312156200012c575f80fd5b82516001600160401b038082111562000143575f80fd5b62000151868387016200006d565b9350602085015191508082111562000167575f80fd5b5062000176858286016200006d565b9150509250929050565b600181811c908216806200019557607f821691505b602082108103620001b457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200020557805f5260205f20601f840160051c81016020851015620001e15750805b601f840160051c820191505b8181101562000202575f8155600101620001ed565b50505b505050565b81516001600160401b0381111562000226576200022662000059565b6200023e8162000237845462000180565b84620001ba565b602080601f83116001811462000274575f84156200025c5750858301515b5f19600386901b1c1916600185901b178555620002ce565b5f85815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6108bf80620002e45f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c0565b6040516100bf91906106fe565b60405180910390f35b6100db6100d6366004610765565b610250565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461078d565b610266565b604051601281526020016100bf565b6100db61012d366004610765565b61031a565b6100ef6101403660046107c6565b6001600160a01b03165f9081526020819052604090205490565b6100b2610350565b6100db610170366004610765565b61035f565b6100db610183366004610765565b6103f9565b6100ef6101963660046107e6565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101cf90610817565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610817565b80156102465780601f1061021d57610100808354040283529160200191610246565b820191905f5260205f20905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b5f61025c338484610405565b5060015b92915050565b5f610272848484610528565b6001600160a01b0384165f908152600160209081526040808320338452909152902054828110156102fb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030f853361030a8685610863565b610405565b506001949350505050565b335f8181526001602090815260408083206001600160a01b0387168452909152812054909161025c91859061030a908690610876565b6060600480546101cf90610817565b335f9081526001602090815260408083206001600160a01b0386168452909152812054828110156103e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f2565b6103ef338561030a8685610863565b5060019392505050565b5f61025c338484610528565b6001600160a01b0383166104675760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f2565b6001600160a01b0382166104c85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f2565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661058c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f2565b6001600160a01b0382166105ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f2565b6001600160a01b0383165f90815260208190526040902054818110156106655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f2565b61066f8282610863565b6001600160a01b038086165f9081526020819052604080822093909355908516815290812080548492906106a4908490610876565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f091815260200190565b60405180910390a350505050565b5f602080835283518060208501525f5b8181101561072a5785810183015185820160400152820161070e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610760575f80fd5b919050565b5f8060408385031215610776575f80fd5b61077f8361074a565b946020939093013593505050565b5f805f6060848603121561079f575f80fd5b6107a88461074a565b92506107b66020850161074a565b9150604084013590509250925092565b5f602082840312156107d6575f80fd5b6107df8261074a565b9392505050565b5f80604083850312156107f7575f80fd5b6108008361074a565b915061080e6020840161074a565b90509250929050565b600181811c9082168061082b57607f821691505b60208210810361084957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102605761026061084f565b808201808211156102605761026061084f56fea2646970667358221220802e6cd04bfd1df2c08cce3ea80c7d5f3a87588eee8d4537dfdac9c069a98b3064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBA3 CODESIZE SUB DUP1 PUSH3 0xBA3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x11A JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x20A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x20A JUMP JUMPDEST POP POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x105 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x151 DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x176 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x205 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1E1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x202 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x226 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x237 DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x274 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CE JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x283 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C2 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8BF DUP1 PUSH3 0x2E4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x350 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x246 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x246 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x229 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x272 DUP5 DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F DUP6 CALLER PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x25C SWAP2 DUP6 SWAP1 PUSH2 0x30A SWAP1 DUP7 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x3EF CALLER DUP6 PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A4 SWAP1 DUP5 SWAP1 PUSH2 0x876 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x70E JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77F DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A8 DUP5 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP PUSH2 0x7B6 PUSH1 0x20 DUP6 ADD PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DF DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x80E PUSH1 0x20 DUP5 ADD PUSH2 0x74A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x849 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2E PUSH13 0xD04BFD1DF2C08CCE3EA80C7D5F GASPRICE DUP8 PC DUP15 0xEE DUP14 GASLIMIT CALLDATACOPY 0xDF 0xDA 0xC9 0xC0 PUSH10 0xA98B3064736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "1279:9238:1:-:0;;;1842:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:5;:13;1917:5;1909;:13;:::i;:::-;-1:-1:-1;1932:7:1;:17;1942:7;1932;:17;:::i;:::-;;1842:114;;1279:9238;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:6;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:6;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:6;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:6;;;3962:26;3913:89;-1:-1:-1;;2724:1:6;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:6;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:6;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;:::-;1279:9238:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_598": {
									"entryPoint": 1029,
									"id": 598,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_609": {
									"entryPoint": null,
									"id": 609,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_760": {
									"entryPoint": null,
									"id": 760,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_444": {
									"entryPoint": 1320,
									"id": 444,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_262": {
									"entryPoint": 592,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_374": {
									"entryPoint": 863,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_336": {
									"entryPoint": 794,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_160": {
									"entryPoint": 448,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_169": {
									"entryPoint": 848,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_309": {
									"entryPoint": 614,
									"id": 309,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_223": {
									"entryPoint": 1017,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5973:6",
										"nodeType": "YulBlock",
										"src": "0:5973:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:6",
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nativeSrc": "145:12:6",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:6",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:6",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:6",
																		"nodeType": "YulLiteral",
																		"src": "184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nativeSrc": "166:21:6",
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nativeSrc": "166:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nativeSrc": "196:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nativeSrc": "210:13:6",
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:6",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:6",
																				"nodeType": "YulLiteral",
																				"src": "254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nativeSrc": "239:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nativeSrc": "232:34:6",
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nativeSrc": "232:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nativeSrc": "275:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:6",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:6",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:6",
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nativeSrc": "369:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:6",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nativeSrc": "365:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nativeSrc": "403:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nativeSrc": "399:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nativeSrc": "393:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nativeSrc": "358:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nativeSrc": "358:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nativeSrc": "302:13:6",
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nativeSrc": "294:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:6",
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nativeSrc": "318:15:6",
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nativeSrc": "323:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:6",
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nativeSrc": "454:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:6",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nativeSrc": "450:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:6",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nativeSrc": "443:42:6",
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nativeSrc": "443:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nativeSrc": "494:62:6",
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:6",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nativeSrc": "525:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:6",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nativeSrc": "542:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nativeSrc": "521:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nativeSrc": "506:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nativeSrc": "502:54:6",
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nativeSrc": "616:124:6",
													"nodeType": "YulBlock",
													"src": "616:124:6",
													"statements": [
														{
															"nativeSrc": "626:29:6",
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nativeSrc": "635:20:6",
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:6",
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:6",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:6",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nativeSrc": "720:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nativeSrc": "720:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:6",
																										"nodeType": "YulLiteral",
																										"src": "703:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:6",
																										"nodeType": "YulLiteral",
																										"src": "708:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:6"
																								},
																								"nativeSrc": "699:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:6",
																								"nodeType": "YulLiteral",
																								"src": "712:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:6"
																						},
																						"nativeSrc": "695:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nativeSrc": "684:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nativeSrc": "674:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nativeSrc": "667:50:6",
																"nodeType": "YulFunctionCall",
																"src": "667:50:6"
															},
															"nativeSrc": "664:70:6",
															"nodeType": "YulIf",
															"src": "664:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:6",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:6",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:173:6"
											},
											{
												"body": {
													"nativeSrc": "832:167:6",
													"nodeType": "YulBlock",
													"src": "832:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:6",
																"nodeType": "YulBlock",
																"src": "878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:6",
																					"nodeType": "YulLiteral",
																					"src": "887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:6"
																			},
																			"nativeSrc": "880:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:6"
																		},
																		"nativeSrc": "880:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:6"
																		},
																		"nativeSrc": "849:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:6",
																		"nodeType": "YulLiteral",
																		"src": "874:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nativeSrc": "845:32:6",
																"nodeType": "YulFunctionCall",
																"src": "845:32:6"
															},
															"nativeSrc": "842:52:6",
															"nodeType": "YulIf",
															"src": "842:52:6"
														},
														{
															"nativeSrc": "903:39:6",
															"nodeType": "YulAssignment",
															"src": "903:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:6"
																},
																"nativeSrc": "913:29:6",
																"nodeType": "YulFunctionCall",
																"src": "913:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:6"
																}
															]
														},
														{
															"nativeSrc": "951:42:6",
															"nodeType": "YulAssignment",
															"src": "951:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:6",
																				"nodeType": "YulLiteral",
																				"src": "989:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:6"
																		},
																		"nativeSrc": "974:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:6"
																},
																"nativeSrc": "961:32:6",
																"nodeType": "YulFunctionCall",
																"src": "961:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:6",
														"nodeType": "YulTypedName",
														"src": "790:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:6",
														"nodeType": "YulTypedName",
														"src": "801:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:6",
														"nodeType": "YulTypedName",
														"src": "813:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:6",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													}
												],
												"src": "745:254:6"
											},
											{
												"body": {
													"nativeSrc": "1099:92:6",
													"nodeType": "YulBlock",
													"src": "1099:92:6",
													"statements": [
														{
															"nativeSrc": "1109:26:6",
															"nodeType": "YulAssignment",
															"src": "1109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nativeSrc": "1117:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				"nativeSrc": "1169:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:6"
																		},
																		"nativeSrc": "1162:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nativeSrc": "1144:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:6"
															},
															"nativeSrc": "1144:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:6",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:6",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:6",
														"nodeType": "YulTypedName",
														"src": "1090:4:6",
														"type": ""
													}
												],
												"src": "1004:187:6"
											},
											{
												"body": {
													"nativeSrc": "1297:76:6",
													"nodeType": "YulBlock",
													"src": "1297:76:6",
													"statements": [
														{
															"nativeSrc": "1307:26:6",
															"nodeType": "YulAssignment",
															"src": "1307:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:6"
																},
																"nativeSrc": "1315:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:6"
																},
																"nativeSrc": "1342:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:6"
															},
															"nativeSrc": "1342:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:6",
														"nodeType": "YulTypedName",
														"src": "1266:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:6",
														"nodeType": "YulTypedName",
														"src": "1277:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:6",
														"nodeType": "YulTypedName",
														"src": "1288:4:6",
														"type": ""
													}
												],
												"src": "1196:177:6"
											},
											{
												"body": {
													"nativeSrc": "1482:224:6",
													"nodeType": "YulBlock",
													"src": "1482:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:6",
																"nodeType": "YulBlock",
																"src": "1528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:6"
																			},
																			"nativeSrc": "1530:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:6"
																		},
																		"nativeSrc": "1530:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nativeSrc": "1499:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:6"
																},
																"nativeSrc": "1495:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:6"
															},
															"nativeSrc": "1492:52:6",
															"nodeType": "YulIf",
															"src": "1492:52:6"
														},
														{
															"nativeSrc": "1553:39:6",
															"nodeType": "YulAssignment",
															"src": "1553:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:6"
																},
																"nativeSrc": "1563:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																}
															]
														},
														{
															"nativeSrc": "1601:48:6",
															"nodeType": "YulAssignment",
															"src": "1601:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:6"
																		},
																		"nativeSrc": "1630:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:6"
																},
																"nativeSrc": "1611:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:6"
																}
															]
														},
														{
															"nativeSrc": "1658:42:6",
															"nodeType": "YulAssignment",
															"src": "1658:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:6"
																		},
																		"nativeSrc": "1681:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:6"
																},
																"nativeSrc": "1668:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:6",
														"nodeType": "YulTypedName",
														"src": "1432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:6",
														"nodeType": "YulTypedName",
														"src": "1443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:6",
														"nodeType": "YulTypedName",
														"src": "1455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:6",
														"nodeType": "YulTypedName",
														"src": "1463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:6",
														"nodeType": "YulTypedName",
														"src": "1471:6:6",
														"type": ""
													}
												],
												"src": "1378:328:6"
											},
											{
												"body": {
													"nativeSrc": "1808:87:6",
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nativeSrc": "1818:26:6",
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nativeSrc": "1826:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nativeSrc": "1871:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nativeSrc": "1853:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nativeSrc": "1853:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:6",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:6",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:6",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nativeSrc": "1970:116:6",
													"nodeType": "YulBlock",
													"src": "1970:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:6",
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nativeSrc": "2018:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nativeSrc": "2018:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:6"
																		},
																		"nativeSrc": "1987:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nativeSrc": "1983:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:6"
															},
															"nativeSrc": "1980:52:6",
															"nodeType": "YulIf",
															"src": "1980:52:6"
														},
														{
															"nativeSrc": "2041:39:6",
															"nodeType": "YulAssignment",
															"src": "2041:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:6"
																},
																"nativeSrc": "2051:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:6",
														"nodeType": "YulTypedName",
														"src": "1936:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:6",
														"nodeType": "YulTypedName",
														"src": "1947:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:6",
														"nodeType": "YulTypedName",
														"src": "1959:6:6",
														"type": ""
													}
												],
												"src": "1900:186:6"
											},
											{
												"body": {
													"nativeSrc": "2178:173:6",
													"nodeType": "YulBlock",
													"src": "2178:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:6",
																"nodeType": "YulBlock",
																"src": "2224:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:6"
																			},
																			"nativeSrc": "2226:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:6"
																		},
																		"nativeSrc": "2226:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:6"
																		},
																		"nativeSrc": "2195:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:6"
																},
																"nativeSrc": "2191:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:6"
															},
															"nativeSrc": "2188:52:6",
															"nodeType": "YulIf",
															"src": "2188:52:6"
														},
														{
															"nativeSrc": "2249:39:6",
															"nodeType": "YulAssignment",
															"src": "2249:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:6"
																},
																"nativeSrc": "2259:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:6"
																}
															]
														},
														{
															"nativeSrc": "2297:48:6",
															"nodeType": "YulAssignment",
															"src": "2297:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:6"
																		},
																		"nativeSrc": "2326:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:6"
																},
																"nativeSrc": "2307:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:6",
														"nodeType": "YulTypedName",
														"src": "2136:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:6",
														"nodeType": "YulTypedName",
														"src": "2147:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:6",
														"nodeType": "YulTypedName",
														"src": "2159:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:6",
														"nodeType": "YulTypedName",
														"src": "2167:6:6",
														"type": ""
													}
												],
												"src": "2091:260:6"
											},
											{
												"body": {
													"nativeSrc": "2411:325:6",
													"nodeType": "YulBlock",
													"src": "2411:325:6",
													"statements": [
														{
															"nativeSrc": "2421:22:6",
															"nodeType": "YulAssignment",
															"src": "2421:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:6"
																},
																"nativeSrc": "2431:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:6"
																}
															]
														},
														{
															"nativeSrc": "2452:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:6"
																},
																"nativeSrc": "2478:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:6",
																"nodeType": "YulBlock",
																"src": "2529:31:6",
																"statements": [
																	{
																		"nativeSrc": "2531:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:6"
																			},
																			"nativeSrc": "2541:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:6"
																},
																"nativeSrc": "2502:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:6"
															},
															"nativeSrc": "2499:61:6",
															"nodeType": "YulIf",
															"src": "2499:61:6"
														},
														{
															"body": {
																"nativeSrc": "2619:111:6",
																"nodeType": "YulBlock",
																"src": "2619:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:6"
																					},
																					"nativeSrc": "2643:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:6"
																			},
																			"nativeSrc": "2633:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:6"
																		},
																		"nativeSrc": "2633:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:6"
																			},
																			"nativeSrc": "2677:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:6"
																		},
																		"nativeSrc": "2677:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:6"
																			},
																			"nativeSrc": "2705:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:6"
																		},
																		"nativeSrc": "2705:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:6"
																		},
																		"nativeSrc": "2595:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:6"
																},
																"nativeSrc": "2572:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:6"
															},
															"nativeSrc": "2569:161:6",
															"nodeType": "YulIf",
															"src": "2569:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:6",
														"nodeType": "YulTypedName",
														"src": "2391:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:6",
														"nodeType": "YulTypedName",
														"src": "2400:6:6",
														"type": ""
													}
												],
												"src": "2356:380:6"
											},
											{
												"body": {
													"nativeSrc": "2915:230:6",
													"nodeType": "YulBlock",
													"src": "2915:230:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2932:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2943:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2925:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:6"
																},
																"nativeSrc": "2925:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2925:21:6"
															},
															"nativeSrc": "2925:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2966:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2977:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2962:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:6"
																		},
																		"nativeSrc": "2962:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2982:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:6"
																},
																"nativeSrc": "2955:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2955:30:6"
															},
															"nativeSrc": "2955:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3005:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3016:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3001:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:6"
																		},
																		"nativeSrc": "3001:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nativeSrc": "3021:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2994:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:6"
																},
																"nativeSrc": "2994:62:6",
																"nodeType": "YulFunctionCall",
																"src": "2994:62:6"
															},
															"nativeSrc": "2994:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3076:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3087:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3072:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:6"
																		},
																		"nativeSrc": "3072:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:6"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "3092:10:6",
																		"nodeType": "YulLiteral",
																		"src": "3092:10:6",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3065:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:6"
																},
																"nativeSrc": "3065:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3065:38:6"
															},
															"nativeSrc": "3065:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "3065:38:6"
														},
														{
															"nativeSrc": "3112:27:6",
															"nodeType": "YulAssignment",
															"src": "3112:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3124:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3135:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3135:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3120:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:6"
																},
																"nativeSrc": "3120:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3120:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3112:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2741:404:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2892:9:6",
														"nodeType": "YulTypedName",
														"src": "2892:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2906:4:6",
														"nodeType": "YulTypedName",
														"src": "2906:4:6",
														"type": ""
													}
												],
												"src": "2741:404:6"
											},
											{
												"body": {
													"nativeSrc": "3182:95:6",
													"nodeType": "YulBlock",
													"src": "3182:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3199:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3199:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3206:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3206:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3211:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3211:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3202:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:6"
																		},
																		"nativeSrc": "3202:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:6"
																},
																"nativeSrc": "3192:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3192:31:6"
															},
															"nativeSrc": "3192:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3192:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3239:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3239:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3242:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3242:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:6"
																},
																"nativeSrc": "3232:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3232:15:6"
															},
															"nativeSrc": "3232:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3232:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3263:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3266:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3266:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:6"
																},
																"nativeSrc": "3256:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3256:15:6"
															},
															"nativeSrc": "3256:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3256:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3150:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3150:127:6"
											},
											{
												"body": {
													"nativeSrc": "3331:79:6",
													"nodeType": "YulBlock",
													"src": "3331:79:6",
													"statements": [
														{
															"nativeSrc": "3341:17:6",
															"nodeType": "YulAssignment",
															"src": "3341:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3353:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3353:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3356:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3356:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3349:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:6"
																},
																"nativeSrc": "3349:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3349:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3341:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3341:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3382:22:6",
																"nodeType": "YulBlock",
																"src": "3382:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3384:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3384:16:6"
																			},
																			"nativeSrc": "3384:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3384:18:6"
																		},
																		"nativeSrc": "3384:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3384:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3373:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3373:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3379:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3379:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3370:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3370:2:6"
																},
																"nativeSrc": "3370:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3370:11:6"
															},
															"nativeSrc": "3367:37:6",
															"nodeType": "YulIf",
															"src": "3367:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3282:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3313:1:6",
														"nodeType": "YulTypedName",
														"src": "3313:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3316:1:6",
														"nodeType": "YulTypedName",
														"src": "3316:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3322:4:6",
														"nodeType": "YulTypedName",
														"src": "3322:4:6",
														"type": ""
													}
												],
												"src": "3282:128:6"
											},
											{
												"body": {
													"nativeSrc": "3463:77:6",
													"nodeType": "YulBlock",
													"src": "3463:77:6",
													"statements": [
														{
															"nativeSrc": "3473:16:6",
															"nodeType": "YulAssignment",
															"src": "3473:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3484:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3484:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3487:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3487:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3480:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:6"
																},
																"nativeSrc": "3480:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3480:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3473:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3512:22:6",
																"nodeType": "YulBlock",
																"src": "3512:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3514:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3514:16:6"
																			},
																			"nativeSrc": "3514:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3514:18:6"
																		},
																		"nativeSrc": "3514:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3514:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3504:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3504:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3507:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3507:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3501:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3501:2:6"
																},
																"nativeSrc": "3501:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3501:10:6"
															},
															"nativeSrc": "3498:36:6",
															"nodeType": "YulIf",
															"src": "3498:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3415:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3446:1:6",
														"nodeType": "YulTypedName",
														"src": "3446:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3449:1:6",
														"nodeType": "YulTypedName",
														"src": "3449:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3455:3:6",
														"nodeType": "YulTypedName",
														"src": "3455:3:6",
														"type": ""
													}
												],
												"src": "3415:125:6"
											},
											{
												"body": {
													"nativeSrc": "3719:227:6",
													"nodeType": "YulBlock",
													"src": "3719:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3736:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3736:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3747:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3729:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:6"
																},
																"nativeSrc": "3729:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3729:21:6"
															},
															"nativeSrc": "3729:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3729:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3770:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3781:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3781:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3766:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:6"
																		},
																		"nativeSrc": "3766:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3766:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3786:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:6"
																},
																"nativeSrc": "3759:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3759:30:6"
															},
															"nativeSrc": "3759:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3759:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3809:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3809:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3820:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3820:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3805:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3805:3:6"
																		},
																		"nativeSrc": "3805:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3805:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3825:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3825:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3798:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:6"
																},
																"nativeSrc": "3798:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3798:62:6"
															},
															"nativeSrc": "3798:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3798:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3880:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3880:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3891:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3891:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3876:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3876:3:6"
																		},
																		"nativeSrc": "3876:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3896:7:6",
																		"nodeType": "YulLiteral",
																		"src": "3896:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3869:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:6"
																},
																"nativeSrc": "3869:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3869:35:6"
															},
															"nativeSrc": "3869:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "3869:35:6"
														},
														{
															"nativeSrc": "3913:27:6",
															"nodeType": "YulAssignment",
															"src": "3913:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3925:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3936:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:6"
																},
																"nativeSrc": "3921:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3921:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3913:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3913:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3545:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3696:9:6",
														"nodeType": "YulTypedName",
														"src": "3696:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3710:4:6",
														"nodeType": "YulTypedName",
														"src": "3710:4:6",
														"type": ""
													}
												],
												"src": "3545:401:6"
											},
											{
												"body": {
													"nativeSrc": "4125:226:6",
													"nodeType": "YulBlock",
													"src": "4125:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4142:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4153:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4135:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:6"
																},
																"nativeSrc": "4135:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4135:21:6"
															},
															"nativeSrc": "4135:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4135:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4176:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4187:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4187:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4172:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:6"
																		},
																		"nativeSrc": "4172:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4192:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4165:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:6"
																},
																"nativeSrc": "4165:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4165:30:6"
															},
															"nativeSrc": "4165:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4165:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4215:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4226:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4211:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:6"
																		},
																		"nativeSrc": "4211:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4231:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4231:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4204:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:6"
																},
																"nativeSrc": "4204:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4204:62:6"
															},
															"nativeSrc": "4204:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4204:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4286:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4297:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4297:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4282:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:6"
																		},
																		"nativeSrc": "4282:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4282:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4302:6:6",
																		"nodeType": "YulLiteral",
																		"src": "4302:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4275:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:6"
																},
																"nativeSrc": "4275:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4275:34:6"
															},
															"nativeSrc": "4275:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4275:34:6"
														},
														{
															"nativeSrc": "4318:27:6",
															"nodeType": "YulAssignment",
															"src": "4318:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4341:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4341:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:6"
																},
																"nativeSrc": "4326:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4326:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4318:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3951:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4102:9:6",
														"nodeType": "YulTypedName",
														"src": "4102:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4116:4:6",
														"nodeType": "YulTypedName",
														"src": "4116:4:6",
														"type": ""
													}
												],
												"src": "3951:400:6"
											},
											{
												"body": {
													"nativeSrc": "4530:224:6",
													"nodeType": "YulBlock",
													"src": "4530:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4547:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4547:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4558:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4540:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:6"
																},
																"nativeSrc": "4540:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4540:21:6"
															},
															"nativeSrc": "4540:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4540:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4581:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4592:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4592:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4577:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:6"
																		},
																		"nativeSrc": "4577:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4577:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4597:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4570:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:6"
																},
																"nativeSrc": "4570:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4570:30:6"
															},
															"nativeSrc": "4570:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4570:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4620:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4631:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4631:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4616:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:6"
																		},
																		"nativeSrc": "4616:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4616:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4636:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4636:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:6"
																},
																"nativeSrc": "4609:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4609:62:6"
															},
															"nativeSrc": "4609:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4609:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4691:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4702:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4702:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4687:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:6"
																		},
																		"nativeSrc": "4687:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4687:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4707:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4707:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4680:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:6"
																},
																"nativeSrc": "4680:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4680:32:6"
															},
															"nativeSrc": "4680:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "4680:32:6"
														},
														{
															"nativeSrc": "4721:27:6",
															"nodeType": "YulAssignment",
															"src": "4721:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4733:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4744:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4744:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4729:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:6"
																},
																"nativeSrc": "4729:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4729:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4721:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4721:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4356:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4507:9:6",
														"nodeType": "YulTypedName",
														"src": "4507:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4521:4:6",
														"nodeType": "YulTypedName",
														"src": "4521:4:6",
														"type": ""
													}
												],
												"src": "4356:398:6"
											},
											{
												"body": {
													"nativeSrc": "4933:227:6",
													"nodeType": "YulBlock",
													"src": "4933:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4950:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4950:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4943:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:6"
																},
																"nativeSrc": "4943:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4943:21:6"
															},
															"nativeSrc": "4943:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4943:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4984:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4984:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4995:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4995:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4980:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:6"
																		},
																		"nativeSrc": "4980:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4980:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5000:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5000:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4973:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:6"
																},
																"nativeSrc": "4973:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4973:30:6"
															},
															"nativeSrc": "4973:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4973:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5023:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5034:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5034:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5019:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:6"
																		},
																		"nativeSrc": "5019:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5019:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "5039:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5039:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5012:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:6"
																},
																"nativeSrc": "5012:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5012:62:6"
															},
															"nativeSrc": "5012:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5012:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5094:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5105:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5105:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5090:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:6"
																		},
																		"nativeSrc": "5090:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "5110:7:6",
																		"nodeType": "YulLiteral",
																		"src": "5110:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5083:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:6"
																},
																"nativeSrc": "5083:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5083:35:6"
															},
															"nativeSrc": "5083:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5083:35:6"
														},
														{
															"nativeSrc": "5127:27:6",
															"nodeType": "YulAssignment",
															"src": "5127:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5139:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5150:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5150:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5135:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:6"
																},
																"nativeSrc": "5135:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5135:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5127:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4759:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4910:9:6",
														"nodeType": "YulTypedName",
														"src": "4910:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4924:4:6",
														"nodeType": "YulTypedName",
														"src": "4924:4:6",
														"type": ""
													}
												],
												"src": "4759:401:6"
											},
											{
												"body": {
													"nativeSrc": "5339:225:6",
													"nodeType": "YulBlock",
													"src": "5339:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5356:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5349:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:6"
																},
																"nativeSrc": "5349:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5349:21:6"
															},
															"nativeSrc": "5349:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5349:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5390:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5401:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5386:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:6"
																		},
																		"nativeSrc": "5386:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5406:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:6"
																},
																"nativeSrc": "5379:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5379:30:6"
															},
															"nativeSrc": "5379:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5379:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5429:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5440:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5425:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:6"
																		},
																		"nativeSrc": "5425:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5445:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5445:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5418:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:6"
																},
																"nativeSrc": "5418:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5418:62:6"
															},
															"nativeSrc": "5418:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5418:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5500:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5511:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5511:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5496:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:6"
																		},
																		"nativeSrc": "5496:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5496:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5516:5:6",
																		"nodeType": "YulLiteral",
																		"src": "5516:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5489:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:6"
																},
																"nativeSrc": "5489:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5489:33:6"
															},
															"nativeSrc": "5489:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5489:33:6"
														},
														{
															"nativeSrc": "5531:27:6",
															"nodeType": "YulAssignment",
															"src": "5531:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5543:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5554:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5539:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:6"
																},
																"nativeSrc": "5539:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5539:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5531:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5165:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5316:9:6",
														"nodeType": "YulTypedName",
														"src": "5316:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5330:4:6",
														"nodeType": "YulTypedName",
														"src": "5330:4:6",
														"type": ""
													}
												],
												"src": "5165:399:6"
											},
											{
												"body": {
													"nativeSrc": "5743:228:6",
													"nodeType": "YulBlock",
													"src": "5743:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5760:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5771:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5753:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:6"
																},
																"nativeSrc": "5753:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5753:21:6"
															},
															"nativeSrc": "5753:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5753:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5794:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5805:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5805:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5790:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:6"
																		},
																		"nativeSrc": "5790:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5790:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5783:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:6"
																},
																"nativeSrc": "5783:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5783:30:6"
															},
															"nativeSrc": "5783:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5783:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5833:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5844:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:6"
																		},
																		"nativeSrc": "5829:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5849:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5849:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5822:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:6"
																},
																"nativeSrc": "5822:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5822:62:6"
															},
															"nativeSrc": "5822:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5822:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5904:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5915:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5915:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5900:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:6"
																		},
																		"nativeSrc": "5900:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5920:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5920:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5893:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:6"
																},
																"nativeSrc": "5893:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5893:36:6"
															},
															"nativeSrc": "5893:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5893:36:6"
														},
														{
															"nativeSrc": "5938:27:6",
															"nodeType": "YulAssignment",
															"src": "5938:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5950:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5961:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5946:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:6"
																},
																"nativeSrc": "5946:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5946:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5938:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5569:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5720:9:6",
														"nodeType": "YulTypedName",
														"src": "5720:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5734:4:6",
														"nodeType": "YulTypedName",
														"src": "5734:4:6",
														"type": ""
													}
												],
												"src": "5569:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c0565b6040516100bf91906106fe565b60405180910390f35b6100db6100d6366004610765565b610250565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461078d565b610266565b604051601281526020016100bf565b6100db61012d366004610765565b61031a565b6100ef6101403660046107c6565b6001600160a01b03165f9081526020819052604090205490565b6100b2610350565b6100db610170366004610765565b61035f565b6100db610183366004610765565b6103f9565b6100ef6101963660046107e6565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101cf90610817565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610817565b80156102465780601f1061021d57610100808354040283529160200191610246565b820191905f5260205f20905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b5f61025c338484610405565b5060015b92915050565b5f610272848484610528565b6001600160a01b0384165f908152600160209081526040808320338452909152902054828110156102fb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030f853361030a8685610863565b610405565b506001949350505050565b335f8181526001602090815260408083206001600160a01b0387168452909152812054909161025c91859061030a908690610876565b6060600480546101cf90610817565b335f9081526001602090815260408083206001600160a01b0386168452909152812054828110156103e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f2565b6103ef338561030a8685610863565b5060019392505050565b5f61025c338484610528565b6001600160a01b0383166104675760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f2565b6001600160a01b0382166104c85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f2565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661058c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f2565b6001600160a01b0382166105ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f2565b6001600160a01b0383165f90815260208190526040902054818110156106655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f2565b61066f8282610863565b6001600160a01b038086165f9081526020819052604080822093909355908516815290812080548492906106a4908490610876565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f091815260200190565b60405180910390a350505050565b5f602080835283518060208501525f5b8181101561072a5785810183015185820160400152820161070e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610760575f80fd5b919050565b5f8060408385031215610776575f80fd5b61077f8361074a565b946020939093013593505050565b5f805f6060848603121561079f575f80fd5b6107a88461074a565b92506107b66020850161074a565b9150604084013590509250925092565b5f602082840312156107d6575f80fd5b6107df8261074a565b9392505050565b5f80604083850312156107f7575f80fd5b6108008361074a565b915061080e6020840161074a565b90509250929050565b600181811c9082168061082b57607f821691505b60208210810361084957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102605761026061084f565b808201808211156102605761026061084f56fea2646970667358221220802e6cd04bfd1df2c08cce3ea80c7d5f3a87588eee8d4537dfdac9c069a98b3064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x350 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x246 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x246 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x229 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x272 DUP5 DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F DUP6 CALLER PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x25C SWAP2 DUP6 SWAP1 PUSH2 0x30A SWAP1 DUP7 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x3EF CALLER DUP6 PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A4 SWAP1 DUP5 SWAP1 PUSH2 0x876 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x70E JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77F DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A8 DUP5 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP PUSH2 0x7B6 PUSH1 0x20 DUP6 ADD PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DF DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x80E PUSH1 0x20 DUP5 ADD PUSH2 0x74A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x849 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2E PUSH13 0xD04BFD1DF2C08CCE3EA80C7D5F GASPRICE DUP8 PC DUP15 0xEE DUP14 GASLIMIT CALLDATACOPY 0xDF 0xDA 0xC9 0xC0 PUSH10 0xA98B3064736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "1279:9238:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4091:166:1;1004:187:6;3082:106:1;3169:12;;3082:106;;;1342:25:6;;;1330:2;1315:18;3082:106:1;1196:177:6;4724:414:1;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;1853:36:6;;1841:2;1826:18;2940:82:1;1711:184:6;5533:212:1;;;;;;:::i;:::-;;:::i;3246:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3346:18:1;3320:7;3346:18;;;;;;;;;;;;3246:125;2223:93;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:18:1;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:4;4213:7:1;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:1;4091:166;;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;-1:-1:-1;;;;;4920:19:1;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:4;4920:33:1;;;;;;;;4971:26;;;;4963:79;;;;-1:-1:-1;;;4963:79:1;;2943:2:6;4963:79:1;;;2925:21:6;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:6;;;3065:38;3120:19;;4963:79:1;;;;;;;;;5052:57;5061:6;665:10:4;5083:25:1;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:1;;4724:414;-1:-1:-1;;;;4724:414:1:o;5533:212::-;665:10:4;5621:4:1;5669:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5669:34:1;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:4;6325:4:1;6368:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6368:34:1;;;;;;;;;;6420:35;;;;6412:85;;;;-1:-1:-1;;;6412:85:1;;3747:2:6;6412:85:1;;;3729:21:6;3786:2;3766:18;;;3759:30;3825:34;3805:18;;;3798:62;-1:-1:-1;;;3876:18:6;;;3869:35;3921:19;;6412:85:1;3545:401:6;6412:85:1;6507:67;665:10:4;6530:7:1;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:1;;6232:371;-1:-1:-1;;;6232:371:1:o;3574:172::-;3660:4;3676:42;665:10:4;3700:9:1;3711:6;3676:9;:42::i;9496:340::-;-1:-1:-1;;;;;9597:19:1;;9589:68;;;;-1:-1:-1;;;9589:68:1;;4153:2:6;9589:68:1;;;4135:21:6;4192:2;4172:18;;;4165:30;4231:34;4211:18;;;4204:62;-1:-1:-1;;;4282:18:6;;;4275:34;4326:19;;9589:68:1;3951:400:6;9589:68:1;-1:-1:-1;;;;;9675:21:1;;9667:68;;;;-1:-1:-1;;;9667:68:1;;4558:2:6;9667:68:1;;;4540:21:6;4597:2;4577:18;;;4570:30;4636:34;4616:18;;;4609:62;-1:-1:-1;;;4687:18:6;;;4680:32;4729:19;;9667:68:1;4356:398:6;9667:68:1;-1:-1:-1;;;;;9746:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;1342:25:6;;;9797:32:1;;1315:18:6;9797:32:1;;;;;;;9496:340;;;:::o;7077:592::-;-1:-1:-1;;;;;7182:20:1;;7174:70;;;;-1:-1:-1;;;7174:70:1;;4961:2:6;7174:70:1;;;4943:21:6;5000:2;4980:18;;;4973:30;5039:34;5019:18;;;5012:62;-1:-1:-1;;;5090:18:6;;;5083:35;5135:19;;7174:70:1;4759:401:6;7174:70:1;-1:-1:-1;;;;;7262:23:1;;7254:71;;;;-1:-1:-1;;;7254:71:1;;5367:2:6;7254:71:1;;;5349:21:6;5406:2;5386:18;;;5379:30;5445:34;5425:18;;;5418:62;-1:-1:-1;;;5496:18:6;;;5489:33;5539:19;;7254:71:1;5165:399:6;7254:71:1;-1:-1:-1;;;;;7418:17:1;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;-1:-1:-1;;;7445:74:1;;5771:2:6;7445:74:1;;;5753:21:6;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:6;;;5893:36;5946:19;;7445:74:1;5569:402:6;7445:74:1;7549:22;7565:6;7549:13;:22;:::i;:::-;-1:-1:-1;;;;;7529:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;-1:-1:-1;;;;;7627:35:1;7636:6;-1:-1:-1;;;;;7627:35:1;;7655:6;7627:35;;;;1342:25:6;;1330:2;1315:18;;1196:177;7627:35:1;;;;;;;;7164:505;7077:592;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:6:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:127::-;3211:10;3206:3;3202:20;3199:1;3192:31;3242:4;3239:1;3232:15;3266:4;3263:1;3256:15;3282:128;3349:9;;;3370:11;;;3367:37;;;3384:18;;:::i;3415:125::-;3480:9;;;3501:10;;;3498:36;;;3514:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "447800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24616",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1842,
									"end": 1956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1917,
									"end": 1922,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1909,
									"end": 1922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1942,
									"end": 1949,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1932,
									"end": 1949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220802e6cd04bfd1df2c08cce3ea80c7d5f3a87588eee8d4537dfdac9c069a98b3064736f6c63430008160033",
									".code": [
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5533,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5533,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3246,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2223,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3574,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3574,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3804,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2079,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2091,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2091,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4190,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4846,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5083,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5052,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5669,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2295,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3859,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3545,
											"end": 3946,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6539,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3676,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4265,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3951,
											"end": 4351,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4356,
											"end": 4754,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5118,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4759,
											"end": 5160,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5479,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5165,
											"end": 5564,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5883,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 5884,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5569,
											"end": 5971,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7549,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7581,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3221,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3270,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3271,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3384,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3415,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3514,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts@4.0.0/utils/Context.sol",
								"openzp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts@4.0.0/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"@openzeppelin/contracts@4.0.0/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.0.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.0.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzp.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzp.sol\":272:530  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"openzp.sol\":329:422  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1917:1922  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1909:1914  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1942:1949  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":867:884  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":887:899  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":887:897  _msgSender */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":887:899  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":909:915  _owner */\n  0x05\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":909:927  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":942:985  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":909:927  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":942:985  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":857:992  {... */\n  pop\n    /* \"openzp.sol\":329:422  constructor(address initialOwner)... */\n  pop\n    /* \"openzp.sol\":272:530  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_24:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_25:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_17:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_18:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_28:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_29:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_20:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_33:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_34:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_32:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_40\n  tag_17\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1850:1947   */\n  tag_41\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_42\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_20\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_45:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_43)\n    /* \"#utility.yul\":2071:2734   */\ntag_44:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_48:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_51:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_43:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\ntag_22:\n    /* \"openzp.sol\":272:530  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzp.sol\":272:530  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3169:3181  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_27\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3013:3015  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_27\n      tag_47\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"openzp.sol\":432:527  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":487:576  function burn(uint256 amount) public virtual {... */\n    tag_10:\n      tag_50\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_33\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3320:3327  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1700:1845  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_50\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":882:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_13:\n      tag_50\n      tag_65\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1068:1153  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1140:1146  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1068:1153  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1140:1146  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1068:1153  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_23\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_16:\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_17:\n      tag_27\n      tag_79\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_33\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3893:3900  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3930  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3919:3946  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1994:2234  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_50\n      tag_88\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2066:2079  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2098:2103  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2091:2103  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4174:4178  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4213:4220  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4222:4228  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4190:4198  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4246:4250  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_97:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4830:4834  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      tag_104\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4856:4862  sender */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4864:4873  recipient */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4875:4881  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4846:4855  _transfer */\n      tag_105\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4893:4917  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4931  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4920:4953  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4971:4997  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3318:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3377   */\n      0x28\n        /* \"#utility.yul\":3355:3373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3348:3378   */\n      mstore\n        /* \"#utility.yul\":3414:3448   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3394:3412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3387:3449   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3465:3483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3458:3496   */\n      mstore\n        /* \"#utility.yul\":3513:3532   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_110\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5061:5067  sender */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_112\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5102:5108  amount */\n      dup7\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5083:5099  currentAllowance */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5052:5060  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5127:5131  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5621:5625  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5680  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5703  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5621:5625  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5637:5717  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_98\n      swap2\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5660:5667  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_112\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5706:5716  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_120\n      jump\t// in\n        /* \"openzp.sol\":432:527  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1140:1146  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1272:1340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_126\n      jump\t// in\n    tag_124:\n        /* \"openzp.sol\":502:519  _mint(to, amount) */\n      tag_128\n        /* \"openzp.sol\":508:510  to */\n      dup3\n        /* \"openzp.sol\":512:518  amount */\n      dup3\n        /* \"openzp.sol\":502:507  _mint */\n      tag_129\n        /* \"openzp.sol\":502:519  _mint(to, amount) */\n      jump\t// in\n    tag_128:\n        /* \"openzp.sol\":432:527  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":487:576  function burn(uint256 amount) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":542:569  _burn(_msgSender(), amount) */\n      tag_131\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":562:568  amount */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":542:547  _burn */\n      tag_133\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":542:569  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":487:576  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1700:1845  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1140:1146  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1272:1340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_126\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1790:1796  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1769:1809  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1806:1807  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1790:1796  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1769:1809  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1806:1807  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1769:1809  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1819:1825  _owner */\n      0x05\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1819:1838  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1700:1845  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":882:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":958:982  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":985:1017  allowance(account, _msgSender()) */\n      tag_142\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":995:1002  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":985:1017  allowance(account, _msgSender()) */\n    tag_142:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":958:1017  uint256 currentAllowance = allowance(account, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1055:1061  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1035:1051  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1035:1061  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1027:1102  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4501:4503   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1027:1102  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4483:4504   */\n      mstore\n        /* \"#utility.yul\":4540:4542   */\n      0x24\n        /* \"#utility.yul\":4520:4538   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4513:4543   */\n      mstore\n        /* \"#utility.yul\":4579:4613   */\n      0x45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77\n        /* \"#utility.yul\":4559:4577   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4552:4614   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":4630:4648   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4623:4657   */\n      mstore\n        /* \"#utility.yul\":4674:4693   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1027:1102  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_108\n        /* \"#utility.yul\":4299:4699   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1027:1102  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n    tag_144:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1112:1170  _approve(account, _msgSender(), currentAllowance - amount) */\n      tag_147\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1121:1128  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1144:1169  currentAllowance - amount */\n      tag_112\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1163:1169  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1144:1160  currentAllowance */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1144:1169  currentAllowance - amount */\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1112:1170  _approve(account, _msgSender(), currentAllowance - amount) */\n    tag_147:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1180:1202  _burn(account, amount) */\n      tag_150\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1186:1193  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1195:1201  amount */\n      dup4\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1180:1185  _burn */\n      tag_133\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":1180:1202  _burn(account, amount) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":948:1209  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":882:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2270:2283  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2302:2309  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":2295:2309  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6325:6329  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6379  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6368:6402  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6420:6455  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4906:4908   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4888:4909   */\n      mstore\n        /* \"#utility.yul\":4945:4947   */\n      0x25\n        /* \"#utility.yul\":4925:4943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4918:4948   */\n      mstore\n        /* \"#utility.yul\":4984:5018   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4964:4982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4957:5019   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5035:5053   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5028:5063   */\n      mstore\n        /* \"#utility.yul\":5080:5099   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_108\n        /* \"#utility.yul\":4704:5105   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_160:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_163\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6530:6537  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_112\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6558:6573  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6539:6555  currentAllowance */\n      dup6\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_163:\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6592:6596  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3660:3664  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3700:3709  recipient */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3711:3717  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3676:3685  _transfer */\n      tag_105\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1994:2234  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1140:1146  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.0.0/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1272:1340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_126\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2082:2104  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2074:2147  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5312:5314   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2074:2147  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5294:5315   */\n      mstore\n        /* \"#utility.yul\":5351:5353   */\n      0x26\n        /* \"#utility.yul\":5331:5349   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5324:5354   */\n      mstore\n        /* \"#utility.yul\":5390:5424   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5370:5388   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5363:5425   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5441:5459   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5434:5470   */\n      mstore\n        /* \"#utility.yul\":5487:5506   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2074:2147  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_108\n        /* \"#utility.yul\":5110:5512   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2074:2147  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_176:\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2183:2189  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2162:2200  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2183:2189  _owner */\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2162:2200  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2183:2189  _owner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2162:2200  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2210:2216  _owner */\n      0x05\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":2210:2227  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":1994:2234  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9597:9616  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5719:5721   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5701:5722   */\n      mstore\n        /* \"#utility.yul\":5758:5760   */\n      0x24\n        /* \"#utility.yul\":5738:5756   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5731:5761   */\n      mstore\n        /* \"#utility.yul\":5797:5831   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5777:5795   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5770:5832   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5848:5866   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5841:5875   */\n      mstore\n        /* \"#utility.yul\":5892:5911   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n        /* \"#utility.yul\":5517:5917   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9675:9696  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6124:6126   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6106:6127   */\n      mstore\n        /* \"#utility.yul\":6163:6165   */\n      0x22\n        /* \"#utility.yul\":6143:6161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6136:6166   */\n      mstore\n        /* \"#utility.yul\":6202:6236   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":6182:6200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6175:6237   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":6253:6271   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6246:6278   */\n      mstore\n        /* \"#utility.yul\":6295:6314   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_108\n        /* \"#utility.yul\":5922:6320   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9757  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9773  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9746:9782  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7182:7202  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6527:6529   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6509:6530   */\n      mstore\n        /* \"#utility.yul\":6566:6568   */\n      0x25\n        /* \"#utility.yul\":6546:6564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6539:6569   */\n      mstore\n        /* \"#utility.yul\":6605:6639   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6585:6603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6578:6640   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6656:6674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6649:6684   */\n      mstore\n        /* \"#utility.yul\":6701:6720   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_108\n        /* \"#utility.yul\":6325:6726   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7262:7285  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6915:6936   */\n      mstore\n        /* \"#utility.yul\":6972:6974   */\n      0x23\n        /* \"#utility.yul\":6952:6970   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6945:6975   */\n      mstore\n        /* \"#utility.yul\":7011:7045   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6991:7009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6984:7046   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7062:7080   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7055:7088   */\n      mstore\n        /* \"#utility.yul\":7105:7124   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_108\n        /* \"#utility.yul\":6731:7130   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7394:7415  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7453:7476  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7337:7339   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7319:7340   */\n      mstore\n        /* \"#utility.yul\":7376:7378   */\n      0x26\n        /* \"#utility.yul\":7356:7374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7349:7379   */\n      mstore\n        /* \"#utility.yul\":7415:7449   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7395:7413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7388:7450   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7466:7484   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7459:7495   */\n      mstore\n        /* \"#utility.yul\":7512:7531   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_108\n        /* \"#utility.yul\":7135:7537   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_197:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_200\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7565:7571  amount */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7549:7562  senderBalance */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_113\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7571  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7601  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_201\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_120\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7644:7653  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7636:7642  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7655:7661  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_202\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7164:7669  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7940:8270  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8023:8044  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7744:7746   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7726:7747   */\n      mstore\n        /* \"#utility.yul\":7783:7785   */\n      0x1f\n        /* \"#utility.yul\":7763:7781   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7756:7786   */\n      mstore\n        /* \"#utility.yul\":7822:7855   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7802:7820   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7795:7856   */\n      mstore\n        /* \"#utility.yul\":7873:7891   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_108\n        /* \"#utility.yul\":7542:7897   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_204:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8167:8173  amount */\n      dup1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8151:8163  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8151:8173  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_208:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8201  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8192  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8201  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8211  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8205:8211  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8192  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8211  _balances[account] += amount */\n      tag_209\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8205:8211  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8183:8211  _balances[account] += amount */\n      tag_120\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8243:8244  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":7940:8270  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8590:9073  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8673:8694  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8665:8732  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8104:8106   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8665:8732  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8086:8107   */\n      mstore\n        /* \"#utility.yul\":8143:8145   */\n      0x21\n        /* \"#utility.yul\":8123:8141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8116:8146   */\n      mstore\n        /* \"#utility.yul\":8182:8216   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":8162:8180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8155:8217   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8233:8251   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8226:8257   */\n      mstore\n        /* \"#utility.yul\":8274:8293   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8665:8732  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_108\n        /* \"#utility.yul\":7902:8299   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8665:8732  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8828:8846  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8803:8825  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8828:8846  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8864:8888  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8856:8927  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8506:8508   */\n      0x20\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8856:8927  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8545:8547   */\n      0x22\n        /* \"#utility.yul\":8525:8543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8518:8548   */\n      mstore\n        /* \"#utility.yul\":8584:8618   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":8564:8582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8557:8619   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8635:8653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8628:8660   */\n      mstore\n        /* \"#utility.yul\":8677:8696   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8856:8927  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_108\n        /* \"#utility.yul\":8304:8702   */\n      jump\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8856:8927  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_216:\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8958:8981  accountBalance - amount */\n      tag_219\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8975:8981  amount */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8958:8972  accountBalance */\n      dup3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8958:8981  accountBalance - amount */\n      tag_113\n      jump\t// in\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8937:8955  _balances[account] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8937:8946  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8937:8955  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8937:8981  _balances[account] = accountBalance - amount */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8991:9003  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8991:9013  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9007:9013  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8937:8946  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8991:9013  _totalSupply -= amount */\n      tag_220\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9007:9013  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":8991:9013  _totalSupply -= amount */\n      tag_113\n      jump\t// in\n    tag_220:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9029:9066  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9055:9056  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9029:9066  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":9029:9066  Transfer(account, address(0), amount) */\n      tag_187\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_26:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_227:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_227)\n    tag_229:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_223:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_231:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_29:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_233:\n        /* \"#utility.yul\":913:942   */\n      tag_234\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_223\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_39:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_238:\n        /* \"#utility.yul\":1563:1592   */\n      tag_239\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_223\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_240\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_223\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_55:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_59:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_245:\n        /* \"#utility.yul\":2236:2265   */\n      tag_246\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_223\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_84:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_249:\n        /* \"#utility.yul\":2652:2681   */\n      tag_250\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_223\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_251\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_223\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_92:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_253:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3670   */\n    tag_224:\n        /* \"#utility.yul\":3604:3614   */\n      0x4e487b71\n        /* \"#utility.yul\":3599:3602   */\n      0xe0\n        /* \"#utility.yul\":3595:3615   */\n      shl\n        /* \"#utility.yul\":3592:3593   */\n      0x00\n        /* \"#utility.yul\":3585:3616   */\n      mstore\n        /* \"#utility.yul\":3635:3639   */\n      0x11\n        /* \"#utility.yul\":3632:3633   */\n      0x04\n        /* \"#utility.yul\":3625:3640   */\n      mstore\n        /* \"#utility.yul\":3659:3663   */\n      0x24\n        /* \"#utility.yul\":3656:3657   */\n      0x00\n        /* \"#utility.yul\":3649:3664   */\n      revert\n        /* \"#utility.yul\":3675:3803   */\n    tag_113:\n        /* \"#utility.yul\":3742:3751   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3763:3774   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3760:3797   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3777:3795   */\n      tag_97\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":3808:3933   */\n    tag_120:\n        /* \"#utility.yul\":3873:3882   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3894:3904   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3891:3927   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3907:3925   */\n      tag_97\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":3938:4294   */\n    tag_126:\n        /* \"#utility.yul\":4140:4142   */\n      0x20\n        /* \"#utility.yul\":4122:4143   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4159:4177   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4152:4182   */\n      mstore\n        /* \"#utility.yul\":4218:4252   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4213:4215   */\n      0x40\n        /* \"#utility.yul\":4198:4216   */\n      dup3\n      add\n        /* \"#utility.yul\":4191:4253   */\n      mstore\n        /* \"#utility.yul\":4285:4287   */\n      0x60\n        /* \"#utility.yul\":4270:4288   */\n      add\n      swap1\n        /* \"#utility.yul\":3938:4294   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fad25708df643c9c1620bbc1988690deb43ce9d20f242d9aca4a0ee9294c4b8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_151": {
									"entryPoint": null,
									"id": 151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_760": {
									"entryPoint": 247,
									"id": 760,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2993:6",
										"nodeType": "YulBlock",
										"src": "0:2993:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:6",
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:6",
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:6",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:6",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nativeSrc": "143:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nativeSrc": "143:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nativeSrc": "112:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nativeSrc": "108:32:6",
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nativeSrc": "105:52:6",
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nativeSrc": "166:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nativeSrc": "179:16:6",
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:6",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:6",
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:6",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:6",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nativeSrc": "260:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nativeSrc": "260:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:6",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:6",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nativeSrc": "239:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:6",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nativeSrc": "235:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nativeSrc": "224:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nativeSrc": "214:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nativeSrc": "207:50:6",
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nativeSrc": "204:70:6",
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nativeSrc": "283:15:6",
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:6",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:6",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:6",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:6",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											},
											{
												"body": {
													"nativeSrc": "341:95:6",
													"nodeType": "YulBlock",
													"src": "341:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:6",
																		"nodeType": "YulLiteral",
																		"src": "358:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:6",
																				"nodeType": "YulLiteral",
																				"src": "365:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:6",
																				"nodeType": "YulLiteral",
																				"src": "370:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:6"
																		},
																		"nativeSrc": "361:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:6"
																},
																"nativeSrc": "351:31:6",
																"nodeType": "YulFunctionCall",
																"src": "351:31:6"
															},
															"nativeSrc": "351:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:6",
																		"nodeType": "YulLiteral",
																		"src": "398:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:6",
																		"nodeType": "YulLiteral",
																		"src": "401:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:6"
																},
																"nativeSrc": "391:15:6",
																"nodeType": "YulFunctionCall",
																"src": "391:15:6"
															},
															"nativeSrc": "391:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:6",
																		"nodeType": "YulLiteral",
																		"src": "422:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:6",
																		"nodeType": "YulLiteral",
																		"src": "425:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:6"
																},
																"nativeSrc": "415:15:6",
																"nodeType": "YulFunctionCall",
																"src": "415:15:6"
															},
															"nativeSrc": "415:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:6"
											},
											{
												"body": {
													"nativeSrc": "496:325:6",
													"nodeType": "YulBlock",
													"src": "496:325:6",
													"statements": [
														{
															"nativeSrc": "506:22:6",
															"nodeType": "YulAssignment",
															"src": "506:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:6",
																		"nodeType": "YulLiteral",
																		"src": "520:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:6"
																},
																"nativeSrc": "516:12:6",
																"nodeType": "YulFunctionCall",
																"src": "516:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:6"
																}
															]
														},
														{
															"nativeSrc": "537:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:6",
																		"nodeType": "YulLiteral",
																		"src": "573:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:6"
																},
																"nativeSrc": "563:12:6",
																"nodeType": "YulFunctionCall",
																"src": "563:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:6",
																	"nodeType": "YulTypedName",
																	"src": "541:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:6",
																"nodeType": "YulBlock",
																"src": "614:31:6",
																"statements": [
																	{
																		"nativeSrc": "616:27:6",
																		"nodeType": "YulAssignment",
																		"src": "616:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:6",
																					"nodeType": "YulLiteral",
																					"src": "638:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:6"
																			},
																			"nativeSrc": "626:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:6"
																},
																"nativeSrc": "587:26:6",
																"nodeType": "YulFunctionCall",
																"src": "587:26:6"
															},
															"nativeSrc": "584:61:6",
															"nodeType": "YulIf",
															"src": "584:61:6"
														},
														{
															"body": {
																"nativeSrc": "704:111:6",
																"nodeType": "YulBlock",
																"src": "704:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:6",
																					"nodeType": "YulLiteral",
																					"src": "725:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:6",
																							"nodeType": "YulLiteral",
																							"src": "732:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:6",
																							"nodeType": "YulLiteral",
																							"src": "737:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:6"
																					},
																					"nativeSrc": "728:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:6"
																			},
																			"nativeSrc": "718:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:6"
																		},
																		"nativeSrc": "718:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:6",
																					"nodeType": "YulLiteral",
																					"src": "769:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:6",
																					"nodeType": "YulLiteral",
																					"src": "772:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:6"
																			},
																			"nativeSrc": "762:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:6"
																		},
																		"nativeSrc": "762:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:6",
																					"nodeType": "YulLiteral",
																					"src": "797:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:6",
																					"nodeType": "YulLiteral",
																					"src": "800:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:6"
																			},
																			"nativeSrc": "790:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:6"
																		},
																		"nativeSrc": "790:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:6",
																				"nodeType": "YulLiteral",
																				"src": "691:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:6"
																		},
																		"nativeSrc": "680:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:6"
																},
																"nativeSrc": "657:38:6",
																"nodeType": "YulFunctionCall",
																"src": "657:38:6"
															},
															"nativeSrc": "654:161:6",
															"nodeType": "YulIf",
															"src": "654:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:6",
														"nodeType": "YulTypedName",
														"src": "476:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:6",
														"nodeType": "YulTypedName",
														"src": "485:6:6",
														"type": ""
													}
												],
												"src": "441:380:6"
											},
											{
												"body": {
													"nativeSrc": "882:65:6",
													"nodeType": "YulBlock",
													"src": "882:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:6",
																		"nodeType": "YulLiteral",
																		"src": "899:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:6"
																},
																"nativeSrc": "892:14:6",
																"nodeType": "YulFunctionCall",
																"src": "892:14:6"
															},
															"nativeSrc": "892:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:6"
														},
														{
															"nativeSrc": "915:26:6",
															"nodeType": "YulAssignment",
															"src": "915:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:6",
																		"nodeType": "YulLiteral",
																		"src": "933:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:6",
																		"nodeType": "YulLiteral",
																		"src": "936:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:6"
																},
																"nativeSrc": "923:18:6",
																"nodeType": "YulFunctionCall",
																"src": "923:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:6",
														"nodeType": "YulTypedName",
														"src": "865:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:6",
														"nodeType": "YulTypedName",
														"src": "873:4:6",
														"type": ""
													}
												],
												"src": "826:121:6"
											},
											{
												"body": {
													"nativeSrc": "1033:437:6",
													"nodeType": "YulBlock",
													"src": "1033:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:6",
																"nodeType": "YulBlock",
																"src": "1066:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:6"
																			},
																			"nativeSrc": "1080:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:6"
																		},
																		"nativeSrc": "1080:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:6"
																	},
																	{
																		"nativeSrc": "1109:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:6"
																			},
																			"nativeSrc": "1121:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:6",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:6"
																							},
																							"nativeSrc": "1188:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:6"
																					},
																					"nativeSrc": "1181:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:6"
																			},
																			"nativeSrc": "1171:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:6",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:6",
																			"nodeType": "YulBlock",
																			"src": "1246:23:6",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:6",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:6"
																			},
																			"nativeSrc": "1225:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:6"
																		},
																		"nativeSrc": "1222:47:6",
																		"nodeType": "YulIf",
																		"src": "1222:47:6"
																	},
																	{
																		"nativeSrc": "1282:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:6"
																							},
																							"nativeSrc": "1309:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:6"
																					},
																					"nativeSrc": "1302:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:6"
																			},
																			"nativeSrc": "1292:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:6",
																			"nodeType": "YulBlock",
																			"src": "1434:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:6"
																						},
																						"nativeSrc": "1436:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:6"
																					},
																					"nativeSrc": "1436:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:6"
																			},
																			"nativeSrc": "1381:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:6"
																		},
																		"nativeSrc": "1373:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:6",
																			"nodeType": "YulBlock",
																			"src": "1395:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:6"
																						},
																						"nativeSrc": "1406:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:6",
																			"nodeType": "YulBlock",
																			"src": "1377:3:6",
																			"statements": []
																		},
																		"src": "1373:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:6"
																},
																"nativeSrc": "1046:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:6"
															},
															"nativeSrc": "1043:421:6",
															"nodeType": "YulIf",
															"src": "1043:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:6",
														"nodeType": "YulTypedName",
														"src": "1005:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:6",
														"nodeType": "YulTypedName",
														"src": "1012:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:6",
														"nodeType": "YulTypedName",
														"src": "1017:10:6",
														"type": ""
													}
												],
												"src": "952:518:6"
											},
											{
												"body": {
													"nativeSrc": "1560:81:6",
													"nodeType": "YulBlock",
													"src": "1560:81:6",
													"statements": [
														{
															"nativeSrc": "1570:65:6",
															"nodeType": "YulAssignment",
															"src": "1570:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:6"
																								},
																								"nativeSrc": "1599:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:6"
																								},
																								"nativeSrc": "1612:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:6"
																						},
																						"nativeSrc": "1595:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:6"
																				},
																				"nativeSrc": "1591:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:6"
																		},
																		"nativeSrc": "1581:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:6"
																		},
																		"nativeSrc": "1623:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:6"
																},
																"nativeSrc": "1578:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:6",
														"nodeType": "YulTypedName",
														"src": "1537:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:6",
														"nodeType": "YulTypedName",
														"src": "1543:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:6",
														"nodeType": "YulTypedName",
														"src": "1551:4:6",
														"type": ""
													}
												],
												"src": "1475:166:6"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:6",
													"nodeType": "YulBlock",
													"src": "1742:1249:6",
													"statements": [
														{
															"nativeSrc": "1752:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:6"
																},
																"nativeSrc": "1766:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:6",
																"nodeType": "YulBlock",
																"src": "1819:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:6"
																			},
																			"nativeSrc": "1821:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:6"
																		},
																		"nativeSrc": "1821:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:6"
																				},
																				"nativeSrc": "1803:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:6"
																		},
																		"nativeSrc": "1799:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:6"
																},
																"nativeSrc": "1788:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:6"
															},
															"nativeSrc": "1785:56:6",
															"nodeType": "YulIf",
															"src": "1785:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:6"
																				},
																				"nativeSrc": "1926:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:6"
																		},
																		"nativeSrc": "1900:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:6"
																},
																"nativeSrc": "1850:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:6"
															},
															"nativeSrc": "1850:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:6"
														},
														{
															"nativeSrc": "1956:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:6",
																"nodeType": "YulLiteral",
																"src": "1973:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:6",
																"nodeType": "YulLiteral",
																"src": "2002:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:6",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:6",
															"nodeType": "YulAssignment",
															"src": "2015:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:6",
																"nodeType": "YulLiteral",
																"src": "2028:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:6",
																		"nodeType": "YulBlock",
																		"src": "2078:656:6",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:6"
																							},
																							"nativeSrc": "2119:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:6"
																					},
																					"nativeSrc": "2107:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:6",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:6"
																					},
																					"nativeSrc": "2154:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:6",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:6",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:6",
																					"nodeType": "YulBlock",
																					"src": "2289:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:6"
																												},
																												"nativeSrc": "2328:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:6"
																										},
																										"nativeSrc": "2322:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:6"
																								},
																								"nativeSrc": "2307:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:6"
																							},
																							"nativeSrc": "2307:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:6"
																						},
																						{
																							"nativeSrc": "2366:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:6"
																								},
																								"nativeSrc": "2376:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:6",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:6"
																								},
																								"nativeSrc": "2420:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:6"
																					},
																					"nativeSrc": "2233:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:6"
																				},
																				"nativeSrc": "2225:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:6",
																					"nodeType": "YulBlock",
																					"src": "2248:28:6",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:6"
																								},
																								"nativeSrc": "2255:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:6",
																					"nodeType": "YulBlock",
																					"src": "2229:3:6",
																					"statements": []
																				},
																				"src": "2225:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:6",
																					"nodeType": "YulBlock",
																					"src": "2509:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:6"
																										},
																										"nativeSrc": "2550:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:6"
																								},
																								"nativeSrc": "2544:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:6"
																																		},
																																		"nativeSrc": "2629:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:6"
																																},
																																"nativeSrc": "2625:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:6"
																																},
																																"nativeSrc": "2651:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:6"
																														},
																														"nativeSrc": "2621:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:6"
																												},
																												"nativeSrc": "2617:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:6"
																										},
																										"nativeSrc": "2602:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:6"
																								},
																								"nativeSrc": "2587:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:6"
																							},
																							"nativeSrc": "2587:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:6"
																					},
																					"nativeSrc": "2477:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:6"
																				},
																				"nativeSrc": "2474:201:6",
																				"nodeType": "YulIf",
																				"src": "2474:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:6"
																									},
																									"nativeSrc": "2705:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:6"
																							},
																							"nativeSrc": "2701:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:6"
																					},
																					"nativeSrc": "2688:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:6"
																				},
																				"nativeSrc": "2688:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:6"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:6",
																	"nodeType": "YulCase",
																	"src": "2071:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:6",
																		"nodeType": "YulBlock",
																		"src": "2751:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:6",
																					"nodeType": "YulBlock",
																					"src": "2814:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:6"
																										},
																										"nativeSrc": "2847:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:6"
																								},
																								"nativeSrc": "2841:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:6"
																				},
																				"nativeSrc": "2792:89:6",
																				"nodeType": "YulIf",
																				"src": "2792:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:6"
																							},
																							"nativeSrc": "2907:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:6"
																					},
																					"nativeSrc": "2894:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:6"
																				},
																				"nativeSrc": "2894:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:6",
																	"nodeType": "YulCase",
																	"src": "2743:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:6"
																},
																"nativeSrc": "2048:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:6"
															},
															"nativeSrc": "2041:944:6",
															"nodeType": "YulSwitch",
															"src": "2041:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:6",
														"nodeType": "YulTypedName",
														"src": "1727:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:6",
														"nodeType": "YulTypedName",
														"src": "1733:3:6",
														"type": ""
													}
												],
												"src": "1646:1345:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10D0 CODESIZE SUB DUP1 PUSH3 0x10D0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x80 SWAP2 SWAP1 PUSH3 0x1C8 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x8F DUP3 DUP3 PUSH3 0x1C8 JUMP JUMPDEST POP POP POP PUSH0 PUSH3 0xA3 PUSH3 0xF7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP POP PUSH3 0x294 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x153 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x172 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1C3 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x19F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1C0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1AB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1E4 JUMPI PUSH3 0x1E4 PUSH3 0x12A JUMP JUMPDEST PUSH3 0x1FC DUP2 PUSH3 0x1F5 DUP5 SLOAD PUSH3 0x13E JUMP JUMPDEST DUP5 PUSH3 0x178 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x232 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x21A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x28C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x262 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x241 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x280 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE2E DUP1 PUSH3 0x2A2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x560 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xD51 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xD51 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x317 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x317 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x32D CALLER DUP5 DUP5 PUSH2 0x6FF JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x343 DUP5 DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E0 DUP6 CALLER PUSH2 0x3DB DUP7 DUP6 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x32D SWAP2 DUP6 SWAP1 PUSH2 0x3DB SWAP1 DUP7 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x455 DUP3 DUP3 PUSH2 0x9F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x463 CALLER DUP3 PUSH2 0xAD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x4E4 DUP4 CALLER PUSH2 0x254 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x551 DUP4 CALLER PUSH2 0x3DB DUP6 DUP6 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x55B DUP4 DUP4 PUSH2 0xAD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xD51 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x5FF CALLER DUP6 PUSH2 0x3DB DUP7 DUP6 PUSH2 0xD9D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32D CALLER DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x96A DUP3 DUP3 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x99F SWAP1 DUP5 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA8C SWAP1 DUP5 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0xBB2 DUP3 DUP3 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBDF SWAP1 DUP5 SWAP1 PUSH2 0xD9D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x816 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC4D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC31 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC99 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA2 DUP4 PUSH2 0xC6D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCCB DUP5 PUSH2 0xC6D JUMP JUMPDEST SWAP3 POP PUSH2 0xCD9 PUSH1 0x20 DUP6 ADD PUSH2 0xC6D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD19 DUP3 PUSH2 0xC6D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD3A DUP4 PUSH2 0xC6D JUMP JUMPDEST SWAP2 POP PUSH2 0xD48 PUSH1 0x20 DUP5 ADD PUSH2 0xC6D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD65 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0xD89 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xD2 JUMPI ADDMOD 0xDF PUSH5 0x3C9C1620BB 0xC1 SWAP9 DUP7 SWAP1 0xDE 0xB4 EXTCODECOPY 0xE9 0xD2 0xF 0x24 0x2D SWAP11 0xCA 0x4A 0xE 0xE9 0x29 0x4C 0x4B DUP5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "272:258:5:-:0;;;329:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1842:114:1;;;;;;;;;;;;;-1:-1:-1;;;1842:114:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1842:114:1;;;1917:5;1909;:13;;;;;;:::i;:::-;-1:-1:-1;1932:7:1;:17;1942:7;1932;:17;:::i;:::-;;1842:114;;867:17:0;887:12;:10;;;:12;;:::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;-1:-1:-1;;942:43:0;;-1:-1:-1;;942:43:0;857:135;329:93:5;272:258;;586:96:4;665:10;;586:96::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:6;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:6;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:6;;;2841:26;2792:89;-1:-1:-1;;1603:1:6;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:6;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:6;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;:::-;272:258:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_598": {
									"entryPoint": 1791,
									"id": 598,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_609": {
									"entryPoint": null,
									"id": 609,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_553": {
									"entryPoint": 2773,
									"id": 553,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 2553,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_760": {
									"entryPoint": null,
									"id": 760,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_444": {
									"entryPoint": 2083,
									"id": 444,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_262": {
									"entryPoint": 801,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_748": {
									"entryPoint": 1241,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_710": {
									"entryPoint": 1113,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_374": {
									"entryPoint": 1391,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_336": {
									"entryPoint": 1003,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_810": {
									"entryPoint": 1057,
									"id": 810,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_160": {
									"entryPoint": 657,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_80": {
									"entryPoint": 1126,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_169": {
									"entryPoint": 1376,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_309": {
									"entryPoint": 823,
									"id": 309,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_108": {
									"entryPoint": 1557,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_223": {
									"entryPoint": 1545,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8704:6",
										"nodeType": "YulBlock",
										"src": "0:8704:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:6",
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nativeSrc": "145:12:6",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:6",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:6",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:6",
																		"nodeType": "YulLiteral",
																		"src": "184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nativeSrc": "166:21:6",
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nativeSrc": "166:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nativeSrc": "196:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nativeSrc": "210:13:6",
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:6",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:6",
																				"nodeType": "YulLiteral",
																				"src": "254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nativeSrc": "239:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nativeSrc": "232:34:6",
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nativeSrc": "232:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nativeSrc": "275:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:6",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:6",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:6",
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nativeSrc": "369:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:6",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nativeSrc": "365:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nativeSrc": "403:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nativeSrc": "399:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nativeSrc": "393:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nativeSrc": "358:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nativeSrc": "358:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nativeSrc": "302:13:6",
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nativeSrc": "294:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:6",
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nativeSrc": "318:15:6",
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nativeSrc": "323:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:6",
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nativeSrc": "454:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:6",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nativeSrc": "450:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:6",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nativeSrc": "443:42:6",
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nativeSrc": "443:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nativeSrc": "494:62:6",
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:6",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nativeSrc": "525:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:6",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nativeSrc": "542:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nativeSrc": "521:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nativeSrc": "506:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nativeSrc": "502:54:6",
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nativeSrc": "616:124:6",
													"nodeType": "YulBlock",
													"src": "616:124:6",
													"statements": [
														{
															"nativeSrc": "626:29:6",
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nativeSrc": "635:20:6",
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:6",
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:6",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:6",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nativeSrc": "720:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nativeSrc": "720:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:6",
																										"nodeType": "YulLiteral",
																										"src": "703:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:6",
																										"nodeType": "YulLiteral",
																										"src": "708:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:6"
																								},
																								"nativeSrc": "699:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:6",
																								"nodeType": "YulLiteral",
																								"src": "712:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:6"
																						},
																						"nativeSrc": "695:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nativeSrc": "684:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nativeSrc": "674:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nativeSrc": "667:50:6",
																"nodeType": "YulFunctionCall",
																"src": "667:50:6"
															},
															"nativeSrc": "664:70:6",
															"nodeType": "YulIf",
															"src": "664:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:6",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:6",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:173:6"
											},
											{
												"body": {
													"nativeSrc": "832:167:6",
													"nodeType": "YulBlock",
													"src": "832:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:6",
																"nodeType": "YulBlock",
																"src": "878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:6",
																					"nodeType": "YulLiteral",
																					"src": "887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:6"
																			},
																			"nativeSrc": "880:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:6"
																		},
																		"nativeSrc": "880:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:6"
																		},
																		"nativeSrc": "849:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:6",
																		"nodeType": "YulLiteral",
																		"src": "874:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nativeSrc": "845:32:6",
																"nodeType": "YulFunctionCall",
																"src": "845:32:6"
															},
															"nativeSrc": "842:52:6",
															"nodeType": "YulIf",
															"src": "842:52:6"
														},
														{
															"nativeSrc": "903:39:6",
															"nodeType": "YulAssignment",
															"src": "903:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:6"
																},
																"nativeSrc": "913:29:6",
																"nodeType": "YulFunctionCall",
																"src": "913:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:6"
																}
															]
														},
														{
															"nativeSrc": "951:42:6",
															"nodeType": "YulAssignment",
															"src": "951:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:6",
																				"nodeType": "YulLiteral",
																				"src": "989:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:6"
																		},
																		"nativeSrc": "974:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:6"
																},
																"nativeSrc": "961:32:6",
																"nodeType": "YulFunctionCall",
																"src": "961:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:6",
														"nodeType": "YulTypedName",
														"src": "790:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:6",
														"nodeType": "YulTypedName",
														"src": "801:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:6",
														"nodeType": "YulTypedName",
														"src": "813:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:6",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													}
												],
												"src": "745:254:6"
											},
											{
												"body": {
													"nativeSrc": "1099:92:6",
													"nodeType": "YulBlock",
													"src": "1099:92:6",
													"statements": [
														{
															"nativeSrc": "1109:26:6",
															"nodeType": "YulAssignment",
															"src": "1109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nativeSrc": "1117:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				"nativeSrc": "1169:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:6"
																		},
																		"nativeSrc": "1162:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nativeSrc": "1144:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:6"
															},
															"nativeSrc": "1144:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:6",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:6",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:6",
														"nodeType": "YulTypedName",
														"src": "1090:4:6",
														"type": ""
													}
												],
												"src": "1004:187:6"
											},
											{
												"body": {
													"nativeSrc": "1297:76:6",
													"nodeType": "YulBlock",
													"src": "1297:76:6",
													"statements": [
														{
															"nativeSrc": "1307:26:6",
															"nodeType": "YulAssignment",
															"src": "1307:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:6"
																},
																"nativeSrc": "1315:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:6"
																},
																"nativeSrc": "1342:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:6"
															},
															"nativeSrc": "1342:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:6",
														"nodeType": "YulTypedName",
														"src": "1266:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:6",
														"nodeType": "YulTypedName",
														"src": "1277:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:6",
														"nodeType": "YulTypedName",
														"src": "1288:4:6",
														"type": ""
													}
												],
												"src": "1196:177:6"
											},
											{
												"body": {
													"nativeSrc": "1482:224:6",
													"nodeType": "YulBlock",
													"src": "1482:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:6",
																"nodeType": "YulBlock",
																"src": "1528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:6"
																			},
																			"nativeSrc": "1530:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:6"
																		},
																		"nativeSrc": "1530:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nativeSrc": "1499:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:6"
																},
																"nativeSrc": "1495:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:6"
															},
															"nativeSrc": "1492:52:6",
															"nodeType": "YulIf",
															"src": "1492:52:6"
														},
														{
															"nativeSrc": "1553:39:6",
															"nodeType": "YulAssignment",
															"src": "1553:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:6"
																},
																"nativeSrc": "1563:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																}
															]
														},
														{
															"nativeSrc": "1601:48:6",
															"nodeType": "YulAssignment",
															"src": "1601:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:6"
																		},
																		"nativeSrc": "1630:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:6"
																},
																"nativeSrc": "1611:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:6"
																}
															]
														},
														{
															"nativeSrc": "1658:42:6",
															"nodeType": "YulAssignment",
															"src": "1658:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:6"
																		},
																		"nativeSrc": "1681:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:6"
																},
																"nativeSrc": "1668:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:6",
														"nodeType": "YulTypedName",
														"src": "1432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:6",
														"nodeType": "YulTypedName",
														"src": "1443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:6",
														"nodeType": "YulTypedName",
														"src": "1455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:6",
														"nodeType": "YulTypedName",
														"src": "1463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:6",
														"nodeType": "YulTypedName",
														"src": "1471:6:6",
														"type": ""
													}
												],
												"src": "1378:328:6"
											},
											{
												"body": {
													"nativeSrc": "1808:87:6",
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nativeSrc": "1818:26:6",
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nativeSrc": "1826:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nativeSrc": "1871:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nativeSrc": "1853:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nativeSrc": "1853:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:6",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:6",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:6",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nativeSrc": "1970:110:6",
													"nodeType": "YulBlock",
													"src": "1970:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:6",
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nativeSrc": "2018:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nativeSrc": "2018:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:6"
																		},
																		"nativeSrc": "1987:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nativeSrc": "1983:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:6"
															},
															"nativeSrc": "1980:52:6",
															"nodeType": "YulIf",
															"src": "1980:52:6"
														},
														{
															"nativeSrc": "2041:33:6",
															"nodeType": "YulAssignment",
															"src": "2041:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2051:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:6"
																},
																"nativeSrc": "2051:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2051:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1900:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:6",
														"nodeType": "YulTypedName",
														"src": "1936:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:6",
														"nodeType": "YulTypedName",
														"src": "1947:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:6",
														"nodeType": "YulTypedName",
														"src": "1959:6:6",
														"type": ""
													}
												],
												"src": "1900:180:6"
											},
											{
												"body": {
													"nativeSrc": "2155:116:6",
													"nodeType": "YulBlock",
													"src": "2155:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2201:16:6",
																"nodeType": "YulBlock",
																"src": "2201:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:6"
																			},
																			"nativeSrc": "2203:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:6"
																		},
																		"nativeSrc": "2203:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2176:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2185:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:6"
																		},
																		"nativeSrc": "2172:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:6"
																},
																"nativeSrc": "2168:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2168:32:6"
															},
															"nativeSrc": "2165:52:6",
															"nodeType": "YulIf",
															"src": "2165:52:6"
														},
														{
															"nativeSrc": "2226:39:6",
															"nodeType": "YulAssignment",
															"src": "2226:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2236:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:6"
																},
																"nativeSrc": "2236:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2236:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2085:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2121:9:6",
														"nodeType": "YulTypedName",
														"src": "2121:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2132:7:6",
														"nodeType": "YulTypedName",
														"src": "2132:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2144:6:6",
														"nodeType": "YulTypedName",
														"src": "2144:6:6",
														"type": ""
													}
												],
												"src": "2085:186:6"
											},
											{
												"body": {
													"nativeSrc": "2377:102:6",
													"nodeType": "YulBlock",
													"src": "2377:102:6",
													"statements": [
														{
															"nativeSrc": "2387:26:6",
															"nodeType": "YulAssignment",
															"src": "2387:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2399:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2410:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2395:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:6"
																},
																"nativeSrc": "2395:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2395:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2387:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2429:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2444:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2460:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2465:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2456:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:6"
																						},
																						"nativeSrc": "2456:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2469:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2452:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:6"
																				},
																				"nativeSrc": "2452:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2440:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:6"
																		},
																		"nativeSrc": "2440:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:6"
																},
																"nativeSrc": "2422:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2422:51:6"
															},
															"nativeSrc": "2422:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2276:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2346:9:6",
														"nodeType": "YulTypedName",
														"src": "2346:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2357:6:6",
														"nodeType": "YulTypedName",
														"src": "2357:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2368:4:6",
														"nodeType": "YulTypedName",
														"src": "2368:4:6",
														"type": ""
													}
												],
												"src": "2276:203:6"
											},
											{
												"body": {
													"nativeSrc": "2571:173:6",
													"nodeType": "YulBlock",
													"src": "2571:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2617:16:6",
																"nodeType": "YulBlock",
																"src": "2617:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2626:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2629:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2619:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:6"
																			},
																			"nativeSrc": "2619:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:6"
																		},
																		"nativeSrc": "2619:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2592:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2601:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2588:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:6"
																		},
																		"nativeSrc": "2588:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2584:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:6"
																},
																"nativeSrc": "2584:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2584:32:6"
															},
															"nativeSrc": "2581:52:6",
															"nodeType": "YulIf",
															"src": "2581:52:6"
														},
														{
															"nativeSrc": "2642:39:6",
															"nodeType": "YulAssignment",
															"src": "2642:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2671:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2652:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:6"
																},
																"nativeSrc": "2652:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2652:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2642:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:6"
																}
															]
														},
														{
															"nativeSrc": "2690:48:6",
															"nodeType": "YulAssignment",
															"src": "2690:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2723:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2734:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:6"
																		},
																		"nativeSrc": "2719:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2700:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:6"
																},
																"nativeSrc": "2700:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2700:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2690:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2484:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2529:9:6",
														"nodeType": "YulTypedName",
														"src": "2529:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2540:7:6",
														"nodeType": "YulTypedName",
														"src": "2540:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2552:6:6",
														"nodeType": "YulTypedName",
														"src": "2552:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2560:6:6",
														"nodeType": "YulTypedName",
														"src": "2560:6:6",
														"type": ""
													}
												],
												"src": "2484:260:6"
											},
											{
												"body": {
													"nativeSrc": "2804:325:6",
													"nodeType": "YulBlock",
													"src": "2804:325:6",
													"statements": [
														{
															"nativeSrc": "2814:22:6",
															"nodeType": "YulAssignment",
															"src": "2814:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2828:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2831:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2824:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:6"
																},
																"nativeSrc": "2824:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2824:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2814:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:6"
																}
															]
														},
														{
															"nativeSrc": "2845:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2875:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2881:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2871:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:6"
																},
																"nativeSrc": "2871:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2871:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2849:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2922:31:6",
																"nodeType": "YulBlock",
																"src": "2922:31:6",
																"statements": [
																	{
																		"nativeSrc": "2924:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2924:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2938:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2946:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2934:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:6"
																			},
																			"nativeSrc": "2934:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2924:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2902:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:6"
																},
																"nativeSrc": "2895:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2895:26:6"
															},
															"nativeSrc": "2892:61:6",
															"nodeType": "YulIf",
															"src": "2892:61:6"
														},
														{
															"body": {
																"nativeSrc": "3012:111:6",
																"nodeType": "YulBlock",
																"src": "3012:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3040:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3045:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3036:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:6"
																					},
																					"nativeSrc": "3036:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:6"
																			},
																			"nativeSrc": "3026:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:6"
																		},
																		"nativeSrc": "3026:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:6"
																			},
																			"nativeSrc": "3070:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:6"
																		},
																		"nativeSrc": "3070:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3108:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3098:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:6"
																			},
																			"nativeSrc": "3098:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:6"
																		},
																		"nativeSrc": "3098:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2968:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2991:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2999:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2988:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:6"
																		},
																		"nativeSrc": "2988:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2965:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:6"
																},
																"nativeSrc": "2965:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2965:38:6"
															},
															"nativeSrc": "2962:161:6",
															"nodeType": "YulIf",
															"src": "2962:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2749:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2784:4:6",
														"nodeType": "YulTypedName",
														"src": "2784:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2793:6:6",
														"nodeType": "YulTypedName",
														"src": "2793:6:6",
														"type": ""
													}
												],
												"src": "2749:380:6"
											},
											{
												"body": {
													"nativeSrc": "3308:230:6",
													"nodeType": "YulBlock",
													"src": "3308:230:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3325:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3325:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:6"
																},
																"nativeSrc": "3318:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3318:21:6"
															},
															"nativeSrc": "3318:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3318:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3359:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3370:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3355:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:6"
																		},
																		"nativeSrc": "3355:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3375:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3348:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:6"
																},
																"nativeSrc": "3348:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3348:30:6"
															},
															"nativeSrc": "3348:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3348:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3398:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3409:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3394:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:6"
																		},
																		"nativeSrc": "3394:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nativeSrc": "3414:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3414:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3387:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:6"
																},
																"nativeSrc": "3387:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3387:62:6"
															},
															"nativeSrc": "3387:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3387:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3469:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3469:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3480:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3480:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3465:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:6"
																		},
																		"nativeSrc": "3465:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:18:6"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "3485:10:6",
																		"nodeType": "YulLiteral",
																		"src": "3485:10:6",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3458:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:6"
																},
																"nativeSrc": "3458:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3458:38:6"
															},
															"nativeSrc": "3458:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "3458:38:6"
														},
														{
															"nativeSrc": "3505:27:6",
															"nodeType": "YulAssignment",
															"src": "3505:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3517:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3528:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3528:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3513:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3513:3:6"
																},
																"nativeSrc": "3513:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3513:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3134:404:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3285:9:6",
														"nodeType": "YulTypedName",
														"src": "3285:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3299:4:6",
														"nodeType": "YulTypedName",
														"src": "3299:4:6",
														"type": ""
													}
												],
												"src": "3134:404:6"
											},
											{
												"body": {
													"nativeSrc": "3575:95:6",
													"nodeType": "YulBlock",
													"src": "3575:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3592:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3592:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3599:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3599:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3604:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3604:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3595:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:6"
																		},
																		"nativeSrc": "3595:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3585:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:6"
																},
																"nativeSrc": "3585:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3585:31:6"
															},
															"nativeSrc": "3585:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3585:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3632:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3632:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3635:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3635:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3625:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3625:6:6"
																},
																"nativeSrc": "3625:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3625:15:6"
															},
															"nativeSrc": "3625:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3625:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3656:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3656:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3659:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3659:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3649:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3649:6:6"
																},
																"nativeSrc": "3649:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3649:15:6"
															},
															"nativeSrc": "3649:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3649:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3543:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3543:127:6"
											},
											{
												"body": {
													"nativeSrc": "3724:79:6",
													"nodeType": "YulBlock",
													"src": "3724:79:6",
													"statements": [
														{
															"nativeSrc": "3734:17:6",
															"nodeType": "YulAssignment",
															"src": "3734:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3746:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3746:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3749:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3749:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3742:3:6"
																},
																"nativeSrc": "3742:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3742:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3734:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3734:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3775:22:6",
																"nodeType": "YulBlock",
																"src": "3775:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3777:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3777:16:6"
																			},
																			"nativeSrc": "3777:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3777:18:6"
																		},
																		"nativeSrc": "3777:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3777:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3766:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3766:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3772:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3772:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3763:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3763:2:6"
																},
																"nativeSrc": "3763:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3763:11:6"
															},
															"nativeSrc": "3760:37:6",
															"nodeType": "YulIf",
															"src": "3760:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3675:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3706:1:6",
														"nodeType": "YulTypedName",
														"src": "3706:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3709:1:6",
														"nodeType": "YulTypedName",
														"src": "3709:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3715:4:6",
														"nodeType": "YulTypedName",
														"src": "3715:4:6",
														"type": ""
													}
												],
												"src": "3675:128:6"
											},
											{
												"body": {
													"nativeSrc": "3856:77:6",
													"nodeType": "YulBlock",
													"src": "3856:77:6",
													"statements": [
														{
															"nativeSrc": "3866:16:6",
															"nodeType": "YulAssignment",
															"src": "3866:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3877:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3877:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3880:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3880:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3873:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3873:3:6"
																},
																"nativeSrc": "3873:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3873:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3866:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3905:22:6",
																"nodeType": "YulBlock",
																"src": "3905:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3907:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3907:16:6"
																			},
																			"nativeSrc": "3907:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3907:18:6"
																		},
																		"nativeSrc": "3907:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3907:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3897:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3897:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3900:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3900:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3894:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3894:2:6"
																},
																"nativeSrc": "3894:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3894:10:6"
															},
															"nativeSrc": "3891:36:6",
															"nodeType": "YulIf",
															"src": "3891:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3808:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3839:1:6",
														"nodeType": "YulTypedName",
														"src": "3839:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3842:1:6",
														"nodeType": "YulTypedName",
														"src": "3842:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3848:3:6",
														"nodeType": "YulTypedName",
														"src": "3848:3:6",
														"type": ""
													}
												],
												"src": "3808:125:6"
											},
											{
												"body": {
													"nativeSrc": "4112:182:6",
													"nodeType": "YulBlock",
													"src": "4112:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4129:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4129:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4140:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4122:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:6"
																},
																"nativeSrc": "4122:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4122:21:6"
															},
															"nativeSrc": "4122:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4122:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4163:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4163:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4174:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4174:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4159:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4159:3:6"
																		},
																		"nativeSrc": "4159:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4159:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4179:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4179:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4152:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:6"
																},
																"nativeSrc": "4152:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4152:30:6"
															},
															"nativeSrc": "4152:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4152:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4202:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4202:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4213:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4213:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4198:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:6"
																		},
																		"nativeSrc": "4198:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4198:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4218:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4218:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4191:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:6"
																},
																"nativeSrc": "4191:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4191:62:6"
															},
															"nativeSrc": "4191:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4191:62:6"
														},
														{
															"nativeSrc": "4262:26:6",
															"nodeType": "YulAssignment",
															"src": "4262:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4274:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4274:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4285:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4285:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4270:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4270:3:6"
																},
																"nativeSrc": "4270:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4270:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4262:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4262:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3938:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4089:9:6",
														"nodeType": "YulTypedName",
														"src": "4089:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4103:4:6",
														"nodeType": "YulTypedName",
														"src": "4103:4:6",
														"type": ""
													}
												],
												"src": "3938:356:6"
											},
											{
												"body": {
													"nativeSrc": "4473:226:6",
													"nodeType": "YulBlock",
													"src": "4473:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4490:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4490:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4501:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4501:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4483:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:6"
																},
																"nativeSrc": "4483:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4483:21:6"
															},
															"nativeSrc": "4483:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4483:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4524:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4524:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4535:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4535:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:6"
																		},
																		"nativeSrc": "4520:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4520:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4540:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4540:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4513:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:6"
																},
																"nativeSrc": "4513:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4513:30:6"
															},
															"nativeSrc": "4513:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4513:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4563:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4563:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4574:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4574:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4559:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:6"
																		},
																		"nativeSrc": "4559:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4559:18:6"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "4579:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4579:34:6",
																		"type": "",
																		"value": "ERC20: burn amount exceeds allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4552:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:6"
																},
																"nativeSrc": "4552:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4552:62:6"
															},
															"nativeSrc": "4552:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4552:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4634:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4645:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4645:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4630:3:6"
																		},
																		"nativeSrc": "4630:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4630:18:6"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nativeSrc": "4650:6:6",
																		"nodeType": "YulLiteral",
																		"src": "4650:6:6",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4623:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:6"
																},
																"nativeSrc": "4623:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4623:34:6"
															},
															"nativeSrc": "4623:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4623:34:6"
														},
														{
															"nativeSrc": "4666:27:6",
															"nodeType": "YulAssignment",
															"src": "4666:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4678:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4689:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4689:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4674:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:6"
																},
																"nativeSrc": "4674:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4674:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4666:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4299:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4450:9:6",
														"nodeType": "YulTypedName",
														"src": "4450:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4464:4:6",
														"nodeType": "YulTypedName",
														"src": "4464:4:6",
														"type": ""
													}
												],
												"src": "4299:400:6"
											},
											{
												"body": {
													"nativeSrc": "4878:227:6",
													"nodeType": "YulBlock",
													"src": "4878:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4895:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4895:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4906:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4906:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4888:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4888:6:6"
																},
																"nativeSrc": "4888:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4888:21:6"
															},
															"nativeSrc": "4888:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4888:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4929:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4929:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4940:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4940:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4925:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:6"
																		},
																		"nativeSrc": "4925:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4925:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4945:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4945:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4918:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:6"
																},
																"nativeSrc": "4918:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4918:30:6"
															},
															"nativeSrc": "4918:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4918:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4968:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4968:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4979:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4979:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4964:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:6"
																		},
																		"nativeSrc": "4964:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4964:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "4984:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4984:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4957:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4957:6:6"
																},
																"nativeSrc": "4957:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4957:62:6"
															},
															"nativeSrc": "4957:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4957:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5039:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5039:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5050:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5050:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5035:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5035:3:6"
																		},
																		"nativeSrc": "5035:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5035:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "5055:7:6",
																		"nodeType": "YulLiteral",
																		"src": "5055:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5028:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:6"
																},
																"nativeSrc": "5028:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5028:35:6"
															},
															"nativeSrc": "5028:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5028:35:6"
														},
														{
															"nativeSrc": "5072:27:6",
															"nodeType": "YulAssignment",
															"src": "5072:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5095:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:6"
																},
																"nativeSrc": "5080:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5080:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4704:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4855:9:6",
														"nodeType": "YulTypedName",
														"src": "4855:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4869:4:6",
														"nodeType": "YulTypedName",
														"src": "4869:4:6",
														"type": ""
													}
												],
												"src": "4704:401:6"
											},
											{
												"body": {
													"nativeSrc": "5284:228:6",
													"nodeType": "YulBlock",
													"src": "5284:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5301:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5301:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5312:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5312:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5294:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:6"
																},
																"nativeSrc": "5294:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5294:21:6"
															},
															"nativeSrc": "5294:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5294:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5335:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5335:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5346:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5346:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5331:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:6"
																		},
																		"nativeSrc": "5331:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5331:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5351:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5351:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5324:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5324:6:6"
																},
																"nativeSrc": "5324:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5324:30:6"
															},
															"nativeSrc": "5324:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5324:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5374:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5385:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5385:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5370:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:6"
																		},
																		"nativeSrc": "5370:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5370:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "5390:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5390:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5363:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:6"
																},
																"nativeSrc": "5363:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5363:62:6"
															},
															"nativeSrc": "5363:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5363:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5445:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5441:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5441:3:6"
																		},
																		"nativeSrc": "5441:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "5461:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5461:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:6"
																},
																"nativeSrc": "5434:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5434:36:6"
															},
															"nativeSrc": "5434:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5434:36:6"
														},
														{
															"nativeSrc": "5479:27:6",
															"nodeType": "YulAssignment",
															"src": "5479:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5491:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5502:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5502:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:6"
																},
																"nativeSrc": "5487:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5487:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5479:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5479:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5110:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5261:9:6",
														"nodeType": "YulTypedName",
														"src": "5261:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5275:4:6",
														"nodeType": "YulTypedName",
														"src": "5275:4:6",
														"type": ""
													}
												],
												"src": "5110:402:6"
											},
											{
												"body": {
													"nativeSrc": "5691:226:6",
													"nodeType": "YulBlock",
													"src": "5691:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5708:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5708:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5719:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5719:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5701:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5701:6:6"
																},
																"nativeSrc": "5701:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5701:21:6"
															},
															"nativeSrc": "5701:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5701:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5742:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5742:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5753:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5753:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5738:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5738:3:6"
																		},
																		"nativeSrc": "5738:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5738:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5758:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5758:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5731:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:6"
																},
																"nativeSrc": "5731:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5731:30:6"
															},
															"nativeSrc": "5731:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5731:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5781:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5781:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5792:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5792:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5777:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:6"
																		},
																		"nativeSrc": "5777:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5777:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "5797:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5797:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5770:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5770:6:6"
																},
																"nativeSrc": "5770:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5770:62:6"
															},
															"nativeSrc": "5770:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5770:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5852:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5852:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5863:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5863:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5848:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5848:3:6"
																		},
																		"nativeSrc": "5848:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5848:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "5868:6:6",
																		"nodeType": "YulLiteral",
																		"src": "5868:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5841:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5841:6:6"
																},
																"nativeSrc": "5841:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5841:34:6"
															},
															"nativeSrc": "5841:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5841:34:6"
														},
														{
															"nativeSrc": "5884:27:6",
															"nodeType": "YulAssignment",
															"src": "5884:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5896:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5907:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5907:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5892:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5892:3:6"
																},
																"nativeSrc": "5892:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5892:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5884:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5884:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5517:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5668:9:6",
														"nodeType": "YulTypedName",
														"src": "5668:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5682:4:6",
														"nodeType": "YulTypedName",
														"src": "5682:4:6",
														"type": ""
													}
												],
												"src": "5517:400:6"
											},
											{
												"body": {
													"nativeSrc": "6096:224:6",
													"nodeType": "YulBlock",
													"src": "6096:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6113:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6113:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6124:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6124:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6106:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:6"
																},
																"nativeSrc": "6106:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6106:21:6"
															},
															"nativeSrc": "6106:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6106:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6147:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6147:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6158:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6158:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6143:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6143:3:6"
																		},
																		"nativeSrc": "6143:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6143:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6163:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6136:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:6"
																},
																"nativeSrc": "6136:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6136:30:6"
															},
															"nativeSrc": "6136:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6136:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6186:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6197:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6197:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6182:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:6"
																		},
																		"nativeSrc": "6182:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6182:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "6202:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6202:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6175:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:6"
																},
																"nativeSrc": "6175:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6175:62:6"
															},
															"nativeSrc": "6175:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6175:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:6"
																		},
																		"nativeSrc": "6253:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "6273:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6273:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:6"
																},
																"nativeSrc": "6246:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6246:32:6"
															},
															"nativeSrc": "6246:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "6246:32:6"
														},
														{
															"nativeSrc": "6287:27:6",
															"nodeType": "YulAssignment",
															"src": "6287:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6299:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6299:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6310:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6310:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6295:3:6"
																},
																"nativeSrc": "6295:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6295:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6287:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6287:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5922:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6073:9:6",
														"nodeType": "YulTypedName",
														"src": "6073:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6087:4:6",
														"nodeType": "YulTypedName",
														"src": "6087:4:6",
														"type": ""
													}
												],
												"src": "5922:398:6"
											},
											{
												"body": {
													"nativeSrc": "6499:227:6",
													"nodeType": "YulBlock",
													"src": "6499:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6516:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6516:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6509:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6509:6:6"
																},
																"nativeSrc": "6509:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6509:21:6"
															},
															"nativeSrc": "6509:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6509:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6550:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6550:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6561:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6546:3:6"
																		},
																		"nativeSrc": "6546:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6546:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6566:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6539:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6539:6:6"
																},
																"nativeSrc": "6539:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6539:30:6"
															},
															"nativeSrc": "6539:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6539:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6589:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6589:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6600:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6600:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6585:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:6"
																		},
																		"nativeSrc": "6585:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6585:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "6605:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6605:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6578:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:6"
																},
																"nativeSrc": "6578:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6578:62:6"
															},
															"nativeSrc": "6578:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6578:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6660:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6671:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6656:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:6"
																		},
																		"nativeSrc": "6656:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "6676:7:6",
																		"nodeType": "YulLiteral",
																		"src": "6676:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6649:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:6"
																},
																"nativeSrc": "6649:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6649:35:6"
															},
															"nativeSrc": "6649:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6649:35:6"
														},
														{
															"nativeSrc": "6693:27:6",
															"nodeType": "YulAssignment",
															"src": "6693:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6705:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6705:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6716:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6716:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6701:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6701:3:6"
																},
																"nativeSrc": "6701:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6701:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6693:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6693:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6325:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6476:9:6",
														"nodeType": "YulTypedName",
														"src": "6476:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6490:4:6",
														"nodeType": "YulTypedName",
														"src": "6490:4:6",
														"type": ""
													}
												],
												"src": "6325:401:6"
											},
											{
												"body": {
													"nativeSrc": "6905:225:6",
													"nodeType": "YulBlock",
													"src": "6905:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6915:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6915:6:6"
																},
																"nativeSrc": "6915:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6915:21:6"
															},
															"nativeSrc": "6915:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6915:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6956:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6956:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6967:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6967:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:6"
																		},
																		"nativeSrc": "6952:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6952:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6972:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6972:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6945:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:6"
																},
																"nativeSrc": "6945:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6945:30:6"
															},
															"nativeSrc": "6945:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6945:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6995:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6995:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7006:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:6"
																		},
																		"nativeSrc": "6991:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "7011:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7011:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:6"
																},
																"nativeSrc": "6984:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6984:62:6"
															},
															"nativeSrc": "6984:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6984:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7066:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7066:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7077:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7077:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7062:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7062:3:6"
																		},
																		"nativeSrc": "7062:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7062:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "7082:5:6",
																		"nodeType": "YulLiteral",
																		"src": "7082:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7055:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7055:6:6"
																},
																"nativeSrc": "7055:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7055:33:6"
															},
															"nativeSrc": "7055:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7055:33:6"
														},
														{
															"nativeSrc": "7097:27:6",
															"nodeType": "YulAssignment",
															"src": "7097:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7109:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7109:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7120:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7120:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7105:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:6"
																},
																"nativeSrc": "7105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7105:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7097:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7097:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6731:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6882:9:6",
														"nodeType": "YulTypedName",
														"src": "6882:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6896:4:6",
														"nodeType": "YulTypedName",
														"src": "6896:4:6",
														"type": ""
													}
												],
												"src": "6731:399:6"
											},
											{
												"body": {
													"nativeSrc": "7309:228:6",
													"nodeType": "YulBlock",
													"src": "7309:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7326:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7326:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7337:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7337:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7319:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7319:6:6"
																},
																"nativeSrc": "7319:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7319:21:6"
															},
															"nativeSrc": "7319:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7319:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7360:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7360:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7371:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7371:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7356:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7356:3:6"
																		},
																		"nativeSrc": "7356:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7356:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7376:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7376:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:6"
																},
																"nativeSrc": "7349:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7349:30:6"
															},
															"nativeSrc": "7349:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7349:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7399:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7399:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7410:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7410:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7395:3:6"
																		},
																		"nativeSrc": "7395:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7395:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "7415:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7415:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7388:6:6"
																},
																"nativeSrc": "7388:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7388:62:6"
															},
															"nativeSrc": "7388:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7388:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7470:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7470:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7481:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7481:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7466:3:6"
																		},
																		"nativeSrc": "7466:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7466:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7486:8:6",
																		"nodeType": "YulLiteral",
																		"src": "7486:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7459:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7459:6:6"
																},
																"nativeSrc": "7459:36:6",
																"nodeType": "YulFunctionCall",
																"src": "7459:36:6"
															},
															"nativeSrc": "7459:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "7459:36:6"
														},
														{
															"nativeSrc": "7504:27:6",
															"nodeType": "YulAssignment",
															"src": "7504:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7516:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7516:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7527:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7527:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7512:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:6"
																},
																"nativeSrc": "7512:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7512:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7504:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7504:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7135:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7286:9:6",
														"nodeType": "YulTypedName",
														"src": "7286:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7300:4:6",
														"nodeType": "YulTypedName",
														"src": "7300:4:6",
														"type": ""
													}
												],
												"src": "7135:402:6"
											},
											{
												"body": {
													"nativeSrc": "7716:181:6",
													"nodeType": "YulBlock",
													"src": "7716:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7733:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7733:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:6"
																},
																"nativeSrc": "7726:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7726:21:6"
															},
															"nativeSrc": "7726:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7726:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7767:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7767:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7778:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7778:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7763:3:6"
																		},
																		"nativeSrc": "7763:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7763:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7783:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7783:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7756:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7756:6:6"
																},
																"nativeSrc": "7756:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7756:30:6"
															},
															"nativeSrc": "7756:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7756:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7806:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7806:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7817:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7817:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7802:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7802:3:6"
																		},
																		"nativeSrc": "7802:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7802:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7822:33:6",
																		"nodeType": "YulLiteral",
																		"src": "7822:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7795:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:6"
																},
																"nativeSrc": "7795:61:6",
																"nodeType": "YulFunctionCall",
																"src": "7795:61:6"
															},
															"nativeSrc": "7795:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "7795:61:6"
														},
														{
															"nativeSrc": "7865:26:6",
															"nodeType": "YulAssignment",
															"src": "7865:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7877:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7877:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7888:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7888:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7873:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7873:3:6"
																},
																"nativeSrc": "7873:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7873:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7865:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7865:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7542:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7693:9:6",
														"nodeType": "YulTypedName",
														"src": "7693:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7707:4:6",
														"nodeType": "YulTypedName",
														"src": "7707:4:6",
														"type": ""
													}
												],
												"src": "7542:355:6"
											},
											{
												"body": {
													"nativeSrc": "8076:223:6",
													"nodeType": "YulBlock",
													"src": "8076:223:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8093:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8093:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8104:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8104:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:6"
																},
																"nativeSrc": "8086:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8086:21:6"
															},
															"nativeSrc": "8086:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8086:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8127:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8127:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8138:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8138:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8123:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:6"
																		},
																		"nativeSrc": "8123:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8143:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8143:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8116:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:6"
																},
																"nativeSrc": "8116:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8116:30:6"
															},
															"nativeSrc": "8116:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8116:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8166:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8166:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8177:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8177:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8162:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8162:3:6"
																		},
																		"nativeSrc": "8162:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8162:18:6"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "8182:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8182:34:6",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8155:6:6"
																},
																"nativeSrc": "8155:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8155:62:6"
															},
															"nativeSrc": "8155:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8155:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8237:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8237:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8248:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8248:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8233:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8233:3:6"
																		},
																		"nativeSrc": "8233:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8233:18:6"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "8253:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8253:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:6:6"
																},
																"nativeSrc": "8226:31:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:31:6"
															},
															"nativeSrc": "8226:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "8226:31:6"
														},
														{
															"nativeSrc": "8266:27:6",
															"nodeType": "YulAssignment",
															"src": "8266:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8278:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8278:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8289:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8289:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8274:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8274:3:6"
																},
																"nativeSrc": "8274:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8274:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8266:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8266:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7902:397:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8053:9:6",
														"nodeType": "YulTypedName",
														"src": "8053:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8067:4:6",
														"nodeType": "YulTypedName",
														"src": "8067:4:6",
														"type": ""
													}
												],
												"src": "7902:397:6"
											},
											{
												"body": {
													"nativeSrc": "8478:224:6",
													"nodeType": "YulBlock",
													"src": "8478:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8495:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8495:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8506:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8506:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8488:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:6"
																},
																"nativeSrc": "8488:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8488:21:6"
															},
															"nativeSrc": "8488:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8529:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8540:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8540:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8525:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8525:3:6"
																		},
																		"nativeSrc": "8525:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8525:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8545:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8545:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8518:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8518:6:6"
																},
																"nativeSrc": "8518:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8518:30:6"
															},
															"nativeSrc": "8518:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8518:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8568:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8568:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8579:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8579:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8564:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:6"
																		},
																		"nativeSrc": "8564:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8564:18:6"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "8584:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8584:34:6",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8557:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8557:6:6"
																},
																"nativeSrc": "8557:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8557:62:6"
															},
															"nativeSrc": "8557:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8557:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8639:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8639:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8650:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8650:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8635:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:6"
																		},
																		"nativeSrc": "8635:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:18:6"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "8655:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8655:4:6",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8628:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:6"
																},
																"nativeSrc": "8628:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8628:32:6"
															},
															"nativeSrc": "8628:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "8628:32:6"
														},
														{
															"nativeSrc": "8669:27:6",
															"nodeType": "YulAssignment",
															"src": "8669:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8681:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8681:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8692:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8677:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8677:3:6"
																},
																"nativeSrc": "8677:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8677:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8669:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8669:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8304:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8455:9:6",
														"nodeType": "YulTypedName",
														"src": "8455:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8469:4:6",
														"nodeType": "YulTypedName",
														"src": "8469:4:6",
														"type": ""
													}
												],
												"src": "8304:398:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610106575f3560e01c806370a082311161009e57806395d89b411161006e57806395d89b4114610218578063a457c2d714610220578063a9059cbb14610233578063dd62ed3e14610246578063f2fde38b1461027e575f80fd5b806370a08231146101ba578063715018a6146101e257806379cc6790146101ea5780638da5cb5b146101fd575f80fd5b8063313ce567116100d9578063313ce56714610170578063395093511461017f57806340c10f191461019257806342966c68146101a7575f80fd5b806306fdde031461010a578063095ea7b31461012857806318160ddd1461014b57806323b872dd1461015d575b5f80fd5b610112610291565b60405161011f9190610c21565b60405180910390f35b61013b610136366004610c88565b610321565b604051901515815260200161011f565b6002545b60405190815260200161011f565b61013b61016b366004610cb0565b610337565b6040516012815260200161011f565b61013b61018d366004610c88565b6103eb565b6101a56101a0366004610c88565b610421565b005b6101a56101b5366004610ce9565b610459565b61014f6101c8366004610d00565b6001600160a01b03165f9081526020819052604090205490565b6101a5610466565b6101a56101f8366004610c88565b6104d9565b6005546040516001600160a01b03909116815260200161011f565b610112610560565b61013b61022e366004610c88565b61056f565b61013b610241366004610c88565b610609565b61014f610254366004610d20565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101a561028c366004610d00565b610615565b6060600380546102a090610d51565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610d51565b80156103175780601f106102ee57610100808354040283529160200191610317565b820191905f5260205f20905b8154815290600101906020018083116102fa57829003601f168201915b5050505050905090565b5f61032d3384846106ff565b5060015b92915050565b5f610343848484610823565b6001600160a01b0384165f908152600160209081526040808320338452909152902054828110156103cc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e085336103db8685610d9d565b6106ff565b506001949350505050565b335f8181526001602090815260408083206001600160a01b0387168452909152812054909161032d9185906103db908690610db0565b6005546001600160a01b0316331461044b5760405162461bcd60e51b81526004016103c390610dc3565b61045582826109f9565b5050565b6104633382610ad5565b50565b6005546001600160a01b031633146104905760405162461bcd60e51b81526004016103c390610dc3565b6005546040515f916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b5f6104e48333610254565b9050818110156105425760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016103c3565b61055183336103db8585610d9d565b61055b8383610ad5565b505050565b6060600480546102a090610d51565b335f9081526001602090815260408083206001600160a01b0386168452909152812054828110156105f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c3565b6105ff33856103db8685610d9d565b5060019392505050565b5f61032d338484610823565b6005546001600160a01b0316331461063f5760405162461bcd60e51b81526004016103c390610dc3565b6001600160a01b0381166106a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c3565b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166107615760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c3565b6001600160a01b0382166107c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c3565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108875760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c3565b6001600160a01b0382166108e95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c3565b6001600160a01b0383165f90815260208190526040902054818110156109605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c3565b61096a8282610d9d565b6001600160a01b038086165f90815260208190526040808220939093559085168152908120805484929061099f908490610db0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109eb91815260200190565b60405180910390a350505050565b6001600160a01b038216610a4f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c3565b8060025f828254610a609190610db0565b90915550506001600160a01b0382165f9081526020819052604081208054839290610a8c908490610db0565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b355760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c3565b6001600160a01b0382165f9081526020819052604090205481811015610ba85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c3565b610bb28282610d9d565b6001600160a01b0384165f9081526020819052604081209190915560028054849290610bdf908490610d9d565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610816565b5f602080835283518060208501525f5b81811015610c4d57858101830151858201604001528201610c31565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c83575f80fd5b919050565b5f8060408385031215610c99575f80fd5b610ca283610c6d565b946020939093013593505050565b5f805f60608486031215610cc2575f80fd5b610ccb84610c6d565b9250610cd960208501610c6d565b9150604084013590509250925092565b5f60208284031215610cf9575f80fd5b5035919050565b5f60208284031215610d10575f80fd5b610d1982610c6d565b9392505050565b5f8060408385031215610d31575f80fd5b610d3a83610c6d565b9150610d4860208401610c6d565b90509250929050565b600181811c90821680610d6557607f821691505b602082108103610d8357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561033157610331610d89565b8082018082111561033157610331610d89565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220fad25708df643c9c1620bbc1988690deb43ce9d20f242d9aca4a0ee9294c4b8464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x560 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xD51 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xD51 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x317 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x317 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x32D CALLER DUP5 DUP5 PUSH2 0x6FF JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x343 DUP5 DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E0 DUP6 CALLER PUSH2 0x3DB DUP7 DUP6 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x32D SWAP2 DUP6 SWAP1 PUSH2 0x3DB SWAP1 DUP7 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x455 DUP3 DUP3 PUSH2 0x9F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x463 CALLER DUP3 PUSH2 0xAD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x4E4 DUP4 CALLER PUSH2 0x254 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x551 DUP4 CALLER PUSH2 0x3DB DUP6 DUP6 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x55B DUP4 DUP4 PUSH2 0xAD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xD51 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x5FF CALLER DUP6 PUSH2 0x3DB DUP7 DUP6 PUSH2 0xD9D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32D CALLER DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x96A DUP3 DUP3 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x99F SWAP1 DUP5 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA8C SWAP1 DUP5 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0xBB2 DUP3 DUP3 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBDF SWAP1 DUP5 SWAP1 PUSH2 0xD9D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x816 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC4D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC31 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC99 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA2 DUP4 PUSH2 0xC6D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCCB DUP5 PUSH2 0xC6D JUMP JUMPDEST SWAP3 POP PUSH2 0xCD9 PUSH1 0x20 DUP6 ADD PUSH2 0xC6D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD19 DUP3 PUSH2 0xC6D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD3A DUP4 PUSH2 0xC6D JUMP JUMPDEST SWAP2 POP PUSH2 0xD48 PUSH1 0x20 DUP5 ADD PUSH2 0xC6D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD65 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0xD89 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xD2 JUMPI ADDMOD 0xDF PUSH5 0x3C9C1620BB 0xC1 SWAP9 DUP7 SWAP1 0xDE 0xB4 EXTCODECOPY 0xE9 0xD2 0xF 0x24 0x2D SWAP11 0xCA 0x4A 0xE 0xE9 0x29 0x4C 0x4B DUP5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "272:258:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4091:166:1;1004:187:6;3082:106:1;3169:12;;3082:106;;;1342:25:6;;;1330:2;1315:18;3082:106:1;1196:177:6;4724:414:1;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;1853:36:6;;1841:2;1826:18;2940:82:1;1711:184:6;5533:212:1;;;;;;:::i;:::-;;:::i;432:95:5:-;;;;;;:::i;:::-;;:::i;:::-;;487:89:3;;;;;;:::i;:::-;;:::i;3246:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3346:18:1;3320:7;3346:18;;;;;;;;;;;;3246:125;1700:145:0;;;:::i;882:327:3:-;;;;;;:::i;:::-;;:::i;1068:85:0:-;1140:6;;1068:85;;-1:-1:-1;;;;;1140:6:0;;;2422:51:6;;2410:2;2395:18;1068:85:0;2276:203:6;2223:93:1;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:18:1;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;1994:240:0;;;;;;:::i;:::-;;:::i;2021:89:1:-;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:4;4213:7:1;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:1;4091:166;;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;-1:-1:-1;;;;;4920:19:1;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:4;4920:33:1;;;;;;;;4971:26;;;;4963:79;;;;-1:-1:-1;;;4963:79:1;;3336:2:6;4963:79:1;;;3318:21:6;3375:2;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;-1:-1:-1;;;3465:18:6;;;3458:38;3513:19;;4963:79:1;;;;;;;;;5052:57;5061:6;665:10:4;5083:25:1;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:1;;4724:414;-1:-1:-1;;;;4724:414:1:o;5533:212::-;665:10:4;5621:4:1;5669:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5669:34:1;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;432:95:5:-;1140:6:0;;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;502:17:5::1;508:2;512:6;502:5;:17::i;:::-;432:95:::0;;:::o;487:89:3:-;542:27;665:10:4;562:6:3;542:5;:27::i;:::-;487:89;:::o;1700:145:0:-;1140:6;;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1790:6:::1;::::0;1769:40:::1;::::0;1806:1:::1;::::0;-1:-1:-1;;;;;1790:6:0::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1819:6;:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;882:327:3:-;958:24;985:32;995:7;665:10:4;3804:149:1;:::i;985:32:3:-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:3;;4501:2:6;1027:75:3;;;4483:21:6;4540:2;4520:18;;;4513:30;4579:34;4559:18;;;4552:62;-1:-1:-1;;;4630:18:6;;;4623:34;4674:19;;1027:75:3;4299:400:6;1027:75:3;1112:58;1121:7;665:10:4;1144:25:3;1163:6;1144:16;:25;:::i;1112:58::-;1180:22;1186:7;1195:6;1180:5;:22::i;:::-;948:261;882:327;;:::o;2223:93:1:-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:4;6325:4:1;6368:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6368:34:1;;;;;;;;;;6420:35;;;;6412:85;;;;-1:-1:-1;;;6412:85:1;;4906:2:6;6412:85:1;;;4888:21:6;4945:2;4925:18;;;4918:30;4984:34;4964:18;;;4957:62;-1:-1:-1;;;5035:18:6;;;5028:35;5080:19;;6412:85:1;4704:401:6;6412:85:1;6507:67;665:10:4;6530:7:1;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:1;;6232:371;-1:-1:-1;;;6232:371:1:o;3574:172::-;3660:4;3676:42;665:10:4;3700:9:1;3711:6;3676:9;:42::i;1994:240:0:-;1140:6;;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;5312:2:6;2074:73:0::1;::::0;::::1;5294:21:6::0;5351:2;5331:18;;;5324:30;5390:34;5370:18;;;5363:62;-1:-1:-1;;;5441:18:6;;;5434:36;5487:19;;2074:73:0::1;5110:402:6::0;2074:73:0::1;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6:::1;::::0;2162:38:::1;::::0;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;9496:340:1:-;-1:-1:-1;;;;;9597:19:1;;9589:68;;;;-1:-1:-1;;;9589:68:1;;5719:2:6;9589:68:1;;;5701:21:6;5758:2;5738:18;;;5731:30;5797:34;5777:18;;;5770:62;-1:-1:-1;;;5848:18:6;;;5841:34;5892:19;;9589:68:1;5517:400:6;9589:68:1;-1:-1:-1;;;;;9675:21:1;;9667:68;;;;-1:-1:-1;;;9667:68:1;;6124:2:6;9667:68:1;;;6106:21:6;6163:2;6143:18;;;6136:30;6202:34;6182:18;;;6175:62;-1:-1:-1;;;6253:18:6;;;6246:32;6295:19;;9667:68:1;5922:398:6;9667:68:1;-1:-1:-1;;;;;9746:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;1342:25:6;;;9797:32:1;;1315:18:6;9797:32:1;;;;;;;;9496:340;;;:::o;7077:592::-;-1:-1:-1;;;;;7182:20:1;;7174:70;;;;-1:-1:-1;;;7174:70:1;;6527:2:6;7174:70:1;;;6509:21:6;6566:2;6546:18;;;6539:30;6605:34;6585:18;;;6578:62;-1:-1:-1;;;6656:18:6;;;6649:35;6701:19;;7174:70:1;6325:401:6;7174:70:1;-1:-1:-1;;;;;7262:23:1;;7254:71;;;;-1:-1:-1;;;7254:71:1;;6933:2:6;7254:71:1;;;6915:21:6;6972:2;6952:18;;;6945:30;7011:34;6991:18;;;6984:62;-1:-1:-1;;;7062:18:6;;;7055:33;7105:19;;7254:71:1;6731:399:6;7254:71:1;-1:-1:-1;;;;;7418:17:1;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;-1:-1:-1;;;7445:74:1;;7337:2:6;7445:74:1;;;7319:21:6;7376:2;7356:18;;;7349:30;7415:34;7395:18;;;7388:62;-1:-1:-1;;;7466:18:6;;;7459:36;7512:19;;7445:74:1;7135:402:6;7445:74:1;7549:22;7565:6;7549:13;:22;:::i;:::-;-1:-1:-1;;;;;7529:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;-1:-1:-1;;;;;7627:35:1;7636:6;-1:-1:-1;;;;;7627:35:1;;7655:6;7627:35;;;;1342:25:6;;1330:2;1315:18;;1196:177;7627:35:1;;;;;;;;7164:505;7077:592;;;:::o;7940:330::-;-1:-1:-1;;;;;8023:21:1;;8015:65;;;;-1:-1:-1;;;8015:65:1;;7744:2:6;8015:65:1;;;7726:21:6;7783:2;7763:18;;;7756:30;7822:33;7802:18;;;7795:61;7873:18;;8015:65:1;7542:355:6;8015:65:1;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8183:18:1;;:9;:18;;;;;;;;;;:28;;8205:6;;8183:9;:28;;8205:6;;8183:28;:::i;:::-;;;;-1:-1:-1;;8226:37:1;;1342:25:6;;;-1:-1:-1;;;;;8226:37:1;;;8243:1;;8226:37;;1330:2:6;1315:18;8226:37:1;;;;;;;7940:330;;:::o;8590:483::-;-1:-1:-1;;;;;8673:21:1;;8665:67;;;;-1:-1:-1;;;8665:67:1;;8104:2:6;8665:67:1;;;8086:21:6;8143:2;8123:18;;;8116:30;8182:34;8162:18;;;8155:62;-1:-1:-1;;;8233:18:6;;;8226:31;8274:19;;8665:67:1;7902:397:6;8665:67:1;-1:-1:-1;;;;;8828:18:1;;8803:22;8828:18;;;;;;;;;;;8864:24;;;;8856:71;;;;-1:-1:-1;;;8856:71:1;;8506:2:6;8856:71:1;;;8488:21:6;8545:2;8525:18;;;8518:30;8584:34;8564:18;;;8557:62;-1:-1:-1;;;8635:18:6;;;8628:32;8677:19;;8856:71:1;8304:398:6;8856:71:1;8958:23;8975:6;8958:14;:23;:::i;:::-;-1:-1:-1;;;;;8937:18:1;;:9;:18;;;;;;;;;;:44;;;;8991:12;:22;;9007:6;;8937:9;8991:22;;9007:6;;8991:22;:::i;:::-;;;;-1:-1:-1;;9029:37:1;;1342:25:6;;;9055:1:1;;-1:-1:-1;;;;;9029:37:1;;;;;1330:2:6;1315:18;9029:37:1;1196:177:6;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:6;;1900:180;-1:-1:-1;1900:180:6:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:6:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3543:127::-;3604:10;3599:3;3595:20;3592:1;3585:31;3635:4;3632:1;3625:15;3659:4;3656:1;3649:15;3675:128;3742:9;;;3763:11;;;3760:37;;;3777:18;;:::i;3808:125::-;3873:9;;;3894:10;;;3891:36;;;3907:18;;:::i;3938:356::-;4140:2;4122:21;;;4159:18;;;4152:30;4218:34;4213:2;4198:18;;4191:62;4285:2;4270:18;;3938:356::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "726000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24640",
								"balanceOf(address)": "2560",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "199",
								"decreaseAllowance(address,uint256)": "26995",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2389",
								"renounceOwnership()": "30205",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30507"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 329,
									"end": 422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 329,
									"end": 422,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 329,
									"end": 422,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1909,
									"end": 1922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1942,
									"end": 1949,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1932,
									"end": 1949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 867,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 887,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 887,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 897,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 887,
									"end": 899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 887,
									"end": 899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 887,
									"end": 899,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 909,
									"end": 915,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 909,
									"end": 927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 942,
									"end": 985,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 857,
									"end": 992,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 422,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 665,
									"end": 675,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 586,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 272,
									"end": 530,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 530,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fad25708df643c9c1620bbc1988690deb43ce9d20f242d9aca4a0ee9294c4b8464736f6c63430008160033",
									".code": [
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "79CC6790"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "42966C68"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 272,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5533,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5533,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 432,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 432,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 576,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 487,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 487,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 487,
											"end": 576,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 487,
											"end": 576,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 487,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 576,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 487,
											"end": 576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 487,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 487,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3246,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1700,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 882,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 882,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2223,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3574,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3574,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3804,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1994,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1994,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2079,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2091,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2091,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4190,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4846,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3339,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3532,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3513,
											"end": 3532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5083,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5052,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5669,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 432,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1272,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 508,
											"end": 510,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 518,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 502,
											"end": 507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 502,
											"end": 519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 502,
											"end": 519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 576,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 487,
											"end": 576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 542,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 542,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 569,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 542,
											"end": 569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 487,
											"end": 576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1272,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1790,
											"end": 1796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 958,
											"end": 982,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 995,
											"end": 1002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3804,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 985,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1061,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1061,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4483,
											"end": 4504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4613,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4552,
											"end": 4614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4299,
											"end": 4699,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1027,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1160,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1144,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1112,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1180,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 948,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 1209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2295,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 4909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4947,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5018,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 5019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4704,
											"end": 5105,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6539,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3676,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1272,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5353,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 5354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5487,
											"end": 5506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5110,
											"end": 5512,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2074,
											"end": 2147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2210,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5760,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5831,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5517,
											"end": 5917,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6165,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6236,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 6182,
											"end": 6200,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6182,
											"end": 6200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6295,
											"end": 6314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5922,
											"end": 6320,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6720,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6701,
											"end": 6720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6325,
											"end": 6726,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 6975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7045,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6984,
											"end": 7046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6731,
											"end": 7130,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7339,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7376,
											"end": 7378,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7415,
											"end": 7449,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7531,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7512,
											"end": 7531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7135,
											"end": 7537,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7549,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7581,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8270,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7940,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8023,
											"end": 8044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7763,
											"end": 7781,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7763,
											"end": 7781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 7786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 7855,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7891,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7873,
											"end": 7891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7542,
											"end": 7897,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8015,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8151,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8151,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8173,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8183,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8211,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8263,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 9073,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8590,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8673,
											"end": 8694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8116,
											"end": 8146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8216,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8155,
											"end": 8217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8233,
											"end": 8251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8293,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8274,
											"end": 8293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7902,
											"end": 8299,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 8665,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8888,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8888,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8508,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8545,
											"end": 8547,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8696,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8677,
											"end": 8696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8304,
											"end": 8702,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8856,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8975,
											"end": 8981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8958,
											"end": 8981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8981,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8958,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8981,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9003,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8991,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8991,
											"end": 9013,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3670,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3543,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3614,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3599,
											"end": 3602,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3595,
											"end": 3615,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3616,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3625,
											"end": 3640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3664,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3774,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3777,
											"end": 3795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3933,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3808,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3907,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 4294,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3938,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4191,
											"end": 4253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 4294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts@4.0.0/utils/Context.sol",
								"openzp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzp.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"@openzeppelin/contracts@4.0.0/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzp.sol\":{\"keccak256\":\"0x4091cc2f4c8dc6acfb65cea91af9904ba43be17c9947be5b93bc3afd25e5e6f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://464187747045ca9f72e1f6027a4774cf783d0ac292ce2870532eb4a705bdafe1\",\"dweb:/ipfs/QmQavd5jxnz7fNteL7jw8tEYystt5f2CzSgHfuKiC2idqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "openzp.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 128,
								"contract": "openzp.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 130,
								"contract": "openzp.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 132,
								"contract": "openzp.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 134,
								"contract": "openzp.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "openzp.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.0.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.0.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							772
						],
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 773,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"613:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "613:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "613:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "89:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								772
							],
							"name": "Ownable",
							"nameLocation": "602:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "643:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "627:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "662:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "699:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "683:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "730:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "714:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:57:0"
									},
									"src": "656:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "857:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "875:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "867:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "867:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "887:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "867:32:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "909:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "909:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "909:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "963:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "963:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "975:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "942:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "937:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "746:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 109,
									"src": "842:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1123:30:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1140:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1133:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "998:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1077:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:9:0"
									},
									"scope": 109,
									"src": "1068:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1262:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1280:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1280:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "1291:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1291:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1280:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1272:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1350:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1159:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1250:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:2:0"
									},
									"src": "1241:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1754:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1769:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1764:45:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1819:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1836:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1828:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1828:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1819:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1819:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1364:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 61,
												"name": "onlyOwner",
												"nameLocations": [
													"1744:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1744:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1744:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1709:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:0"
									},
									"scope": 109,
									"src": "1700:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2064:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2082:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2102:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2094:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2094:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2082:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2106:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2074:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2191:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2162:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2157:43:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2210:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2219:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2210:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2210:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1851:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nameLocations": [
													"2054:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2054:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2054:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2003:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2029:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2021:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:0:0"
									},
									"scope": 109,
									"src": "1994:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "584:1652:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "33:2204:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							772
						],
						"ERC20": [
							610
						],
						"IERC20": [
							688
						]
					},
					"id": 611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 689,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 773,
							"src": "81:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 115,
										"name": "Context",
										"nameLocations": [
											"1297:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "1297:7:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "1297:7:1"
								},
								{
									"baseName": {
										"id": 117,
										"name": "IERC20",
										"nameLocations": [
											"1306:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1306:6:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "1306:6:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 114,
								"nodeType": "StructuredDocumentation",
								"src": "116:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610,
								688,
								772
							],
							"name": "ERC20",
							"nameLocation": "1288:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1356:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1319:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 121,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 119,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1328:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1319:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 120,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1339:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1430:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1372:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 127,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 123,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1381:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1372:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 126,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 124,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1401:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1392:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1464:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1448:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1498:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1483:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1483:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1524:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1509:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 133,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1509:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "1899:57:1",
										"statements": [
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1909:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 143,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1917:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1909:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1909:13:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1932:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "1942:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1932:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1932:17:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1538:299:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 151,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1869:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1855:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1855:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1890:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1876:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1876:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:44:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:0:1"
									},
									"scope": 610,
									"src": "1842:114:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2081:29:1",
										"statements": [
											{
												"expression": {
													"id": 157,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2098:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 156,
												"id": 158,
												"nodeType": "Return",
												"src": "2091:12:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1962:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2030:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:2:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2066:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2066:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:15:1"
									},
									"scope": 610,
									"src": "2021:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2285:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 134,
													"src": "2302:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2295:14:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2116:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2232:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2270:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2270:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:15:1"
									},
									"scope": 610,
									"src": "2223:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2996:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3013:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "3006:9:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2322:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2949:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2957:2:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2989:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2989:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2988:7:1"
									},
									"scope": 610,
									"src": "2940:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										619
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3152:36:1",
										"statements": [
											{
												"expression": {
													"id": 185,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "3169:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 186,
												"nodeType": "Return",
												"src": "3162:19:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "3028:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3091:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3125:8:1"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3102:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3143:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3142:9:1"
									},
									"scope": 610,
									"src": "3082:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										627
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3329:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 197,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "3346:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 199,
													"indexExpression": {
														"id": 198,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3356:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3346:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 196,
												"id": 200,
												"nodeType": "Return",
												"src": "3339:25:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3194:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3255:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3302:8:1"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3273:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3265:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3320:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:9:1"
									},
									"scope": 610,
									"src": "3246:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										637
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3666:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "3686:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3686:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3700:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3711:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "3676:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3676:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3735:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 212,
												"id": 221,
												"nodeType": "Return",
												"src": "3728:11:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3377:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3583:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3642:8:1"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3600:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3592:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3592:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3591:35:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3660:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3660:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3659:6:1"
									},
									"scope": 610,
									"src": "3574:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										647
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "3902:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 234,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3919:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "3931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3919:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 238,
													"indexExpression": {
														"id": 237,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3919:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "3912:34:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "3752:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3813:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3875:8:1"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3831:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3823:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3846:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3838:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:32:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3893:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:9:1"
									},
									"scope": 610,
									"src": "3804:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										657
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "4180:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "4199:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4199:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4213:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4222:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4190:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4190:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4246:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 251,
												"id": 260,
												"nodeType": "Return",
												"src": "4239:11:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3959:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4100:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4156:8:1"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4116:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4108:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4133:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4125:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4107:33:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4174:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4174:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4173:6:1"
									},
									"scope": 610,
									"src": "4091:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										669
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "4836:302:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4856:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4864:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4875:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4846:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "4846:36:1"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4901:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "4893:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4893:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 283,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "4920:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4932:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4920:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 288,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 286,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4940:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4940:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4920:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4893:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "4971:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 292,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "4991:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4971:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4999:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4963:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4963:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "4963:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5061:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 299,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "5069:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5069:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 301,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "5083:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 302,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "5102:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5083:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "5052:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "5052:57:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5127:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 274,
												"id": 307,
												"nodeType": "Return",
												"src": "5120:11:1"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "4263:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4733:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4812:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4754:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4746:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4770:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4762:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4789:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:51:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4830:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4830:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4829:6:1"
									},
									"scope": 610,
									"src": "4724:414:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "5627:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 320,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "5646:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5646:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "5660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 323,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "5669:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 326,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 324,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 760,
																			"src": "5681:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5681:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5669:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "5695:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5669:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 329,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "5706:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5669:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "5637:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "5637:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5734:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 318,
												"id": 334,
												"nodeType": "Return",
												"src": "5727:11:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "5144:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5542:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5568:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5560:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5585:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5577:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:37:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5621:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5621:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5620:6:1"
									},
									"scope": 610,
									"src": "5533:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "6331:272:1",
										"statements": [
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6349:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6341:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6341:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 348,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "6368:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 351,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 349,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "6380:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6380:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6368:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 353,
													"indexExpression": {
														"id": 352,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "6394:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6368:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6341:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "6420:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 357,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "6440:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6420:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6457:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "6412:85:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 363,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "6516:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6516:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6530:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 366,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "6539:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 367,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "6558:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6539:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "6507:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6507:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "6507:67:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6592:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 345,
												"id": 372,
												"nodeType": "Return",
												"src": "6585:11:1"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5751:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6241:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6284:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6276:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6258:42:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6325:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6325:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:6:1"
									},
									"scope": 610,
									"src": "6232:371:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "7164:505:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7182:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7200:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7192:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7192:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7192:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7182:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7204:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7174:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7174:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "7174:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7262:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7283:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7275:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7275:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7275:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7262:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7287:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7254:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7254:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "7254:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7357:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7365:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7376:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7336:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7336:47:1"
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7402:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "7394:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"baseExpression": {
														"id": 412,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "7418:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "7428:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7418:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7394:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "7453:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7470:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7453:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7478:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7445:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7445:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "7445:74:1"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 423,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "7529:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 425,
														"indexExpression": {
															"id": 424,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7539:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7529:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 426,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7549:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7565:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7549:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7529:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7529:42:1"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 431,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "7581:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 433,
														"indexExpression": {
															"id": 432,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7591:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7581:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 434,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "7605:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7581:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "7581:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 438,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7636:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7644:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7655:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "7627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7627:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "EmitStatement",
												"src": "7622:40:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "6609:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7086:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7104:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "7096:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7120:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "7112:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7112:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7139:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "7131:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:51:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7164:0:1"
									},
									"scope": 610,
									"src": "7077:592:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "8005:265:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 453,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "8023:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8042:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8034:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 454,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8034:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8034:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8023:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8046:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8015:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8015:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "8015:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8120:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8112:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 463,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8112:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8112:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8124:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8133:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 462,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "8091:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "8091:49:1"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "8151:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 472,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "8167:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8151:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "8151:22:1"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 475,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "8183:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 477,
														"indexExpression": {
															"id": 476,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8193:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8183:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 478,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "8205:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8183:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8183:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8247:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8256:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8226:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8226:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "EmitStatement",
												"src": "8221:42:1"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "7675:260:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7949:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7963:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7955:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7955:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7980:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7972:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7954:33:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8005:0:1"
									},
									"scope": 610,
									"src": "7940:330:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "8655:418:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 500,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "8673:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8692:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8684:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 501,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8684:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8684:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8673:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8696:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8665:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8665:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8665:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8764:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8781:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 511,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8773:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8773:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "8743:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8743:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "8743:49:1"
											},
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8811:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "8803:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"baseExpression": {
														"id": 520,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "8828:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 522,
													"indexExpression": {
														"id": 521,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8838:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8828:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8803:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "8864:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 526,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "8882:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8864:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8890:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8856:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8856:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "8856:71:1"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 531,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "8937:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 533,
														"indexExpression": {
															"id": 532,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8947:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8937:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 534,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8958:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 535,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8975:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8958:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8937:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "8937:44:1"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 539,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "8991:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 540,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "9007:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8991:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "8991:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 544,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9038:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9055:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9047:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 545,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9047:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9047:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "9059:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9029:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "9024:42:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "8276:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8599:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8613:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "8605:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8605:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8630:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "8622:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8604:33:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8655:0:1"
									},
									"scope": 610,
									"src": "8590:483:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "9579:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 564,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "9597:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9614:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9606:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 565,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9606:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9606:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9597:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9618:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9589:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9589:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "9589:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "9675:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9694:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9686:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9686:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9686:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9675:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9698:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9667:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "9667:68:1"
											},
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 583,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "9746:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 586,
															"indexExpression": {
																"id": 584,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "9758:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9746:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 587,
														"indexExpression": {
															"id": 585,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9746:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 588,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "9776:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9746:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "9746:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 592,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "9806:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9822:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9797:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "EmitStatement",
												"src": "9792:37:1"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "9079:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9505:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9522:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9514:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9514:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9537:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9529:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9529:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9554:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9546:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9513:48:1"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9579:0:1"
									},
									"scope": 610,
									"src": "9496:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "10512:3:1",
										"statements": []
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "9842:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10432:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10461:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "10453:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10475:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "10467:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10467:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10487:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "10479:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10479:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10452:42:1"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10512:0:1"
									},
									"scope": 610,
									"src": "10423:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 611,
							"src": "1279:9238:1",
							"usedErrors": [],
							"usedEvents": [
								678,
								687
							]
						}
					],
					"src": "33:10485:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 612,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 613,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "IERC20",
							"nameLocation": "139:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 688,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 688,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 688,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 688,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 688,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2140:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2156:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2175:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2209:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:2"
									},
									"scope": 688,
									"src": "2118:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 678,
									"name": "Transfer",
									"nameLocation": "2390:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2399:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2421:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2441:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:2"
									},
									"src": "2384:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 687,
									"name": "Approval",
									"nameLocation": "2621:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2630:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2653:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2678:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:2"
									},
									"src": "2615:78:2"
								}
							],
							"scope": 689,
							"src": "129:2566:2",
							"usedErrors": [],
							"usedEvents": [
								678,
								687
							]
						}
					],
					"src": "33:2663:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							772
						],
						"ERC20": [
							610
						],
						"ERC20Burnable": [
							749
						],
						"IERC20": [
							688
						]
					},
					"id": 750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 750,
							"sourceUnit": 611,
							"src": "58:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 750,
							"sourceUnit": 773,
							"src": "81:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 694,
										"name": "Context",
										"nameLocations": [
											"363:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "363:7:3"
									},
									"id": 695,
									"nodeType": "InheritanceSpecifier",
									"src": "363:7:3"
								},
								{
									"baseName": {
										"id": 696,
										"name": "ERC20",
										"nameLocations": [
											"372:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "372:5:3"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "372:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "119:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 749,
							"linearizedBaseContracts": [
								749,
								610,
								688,
								772
							],
							"name": "ERC20Burnable",
							"nameLocation": "346:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "532:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 704,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "548:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "548:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "562:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "542:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "542:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "542:27:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "384:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "496:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:16:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:3"
									},
									"scope": 749,
									"src": "487:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "948:261:3",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "966:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "958:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "958:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 721,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "995:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 722,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "1004:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1004:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 720,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "985:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "958:59:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 727,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "1035:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 728,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "1055:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1035:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1063:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1027:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1027:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "1027:75:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 734,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "1121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 735,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1130:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 737,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "1144:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 738,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "1163:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1144:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1112:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "1112:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "1186:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1195:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 742,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1180:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "1180:22:3"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "582:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "891:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "908:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "900:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "925:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "917:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:33:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:3"
									},
									"scope": 749,
									"src": "882:327:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 750,
							"src": "328:883:3",
							"usedErrors": [],
							"usedEvents": [
								678,
								687
							]
						}
					],
					"src": "33:1179:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.0.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.0.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							772
						]
					},
					"id": 773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 772,
							"linearizedBaseContracts": [
								772
							],
							"name": "Context",
							"nameLocation": "572:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "648:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 756,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "669:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 755,
												"id": 758,
												"nodeType": "Return",
												"src": "658:17:4"
											}
										]
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:4"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "639:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:4"
									},
									"scope": 772,
									"src": "586:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "755:165:4",
										"statements": [
											{
												"expression": {
													"id": 765,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "765:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$772",
														"typeString": "contract Context"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "765:4:4"
											},
											{
												"expression": {
													"expression": {
														"id": 767,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "909:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 764,
												"id": 769,
												"nodeType": "Return",
												"src": "898:15:4"
											}
										]
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "739:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:4"
									},
									"scope": 772,
									"src": "688:232:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 773,
							"src": "554:368:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:890:4"
				},
				"id": 4
			},
			"openzp.sol": {
				"ast": {
					"absolutePath": "openzp.sol",
					"exportedSymbols": {
						"Context": [
							772
						],
						"ERC20": [
							610
						],
						"ERC20Burnable": [
							749
						],
						"IERC20": [
							688
						],
						"MyToken": [
							811
						],
						"Ownable": [
							109
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@4.0.0/token/ERC20/ERC20.sol",
							"id": 775,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 611,
							"src": "63:61:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts@4.0.0/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 750,
							"src": "126:80:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.0.0/access/Ownable.sol",
							"id": 777,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 110,
							"src": "208:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 778,
										"name": "ERC20",
										"nameLocations": [
											"292:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "292:5:5"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "292:5:5"
								},
								{
									"baseName": {
										"id": 780,
										"name": "ERC20Burnable",
										"nameLocations": [
											"299:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "299:13:5"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "299:13:5"
								},
								{
									"baseName": {
										"id": 782,
										"name": "Ownable",
										"nameLocations": [
											"314:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 109,
										"src": "314:7:5"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "314:7:5"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811,
								109,
								749,
								610,
								688,
								772
							],
							"name": "MyToken",
							"nameLocation": "281:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "420:2:5",
										"statements": []
									},
									"id": 795,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "378:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "389:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 790,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 787,
												"name": "ERC20",
												"nameLocations": [
													"372:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "372:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "372:23:5"
										},
										{
											"arguments": [],
											"id": 792,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 791,
												"name": "Ownable",
												"nameLocations": [
													"405:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 109,
												"src": "405:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "405:9:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "349:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "341:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:22:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:0:5"
									},
									"scope": 811,
									"src": "329:93:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "491:36:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "508:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "512:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "502:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "502:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "502:17:5"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 802,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 801,
												"name": "onlyOwner",
												"nameLocations": [
													"481:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "481:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "481:9:5"
										}
									],
									"name": "mint",
									"nameLocation": "441:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "454:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "446:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:28:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:0:5"
									},
									"scope": 811,
									"src": "432:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 812,
							"src": "272:258:5",
							"usedErrors": [],
							"usedEvents": [
								13,
								678,
								687
							]
						}
					],
					"src": "33:497:5"
				},
				"id": 5
			}
		}
	}
}